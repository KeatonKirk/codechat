{
  ".gitignore": "# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\n\n# dependencies\n/node_modules\n/.pnp\n.pnp.js\n\n# testing\n/coverage\n\n# production\n/build\n\n# misc\n.DS_Store\n.env.local\n.env.development.local\n.env.test.local\n.env.production.local\n\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\nnode_modules\n.env\ncoverage\ncoverage.json\ntypechain\ntypechain-types\n\n#Hardhat files\ncache\nartifacts\n\n\nnode_modules\n.env\ncoverage\ncoverage.json\ntypechain\ntypechain-types\n\n#Hardhat files\ncache\nartifacts\n\n",
  "LICENSE": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n\n   1. Definitions.\n\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n\n\n   APPENDIX: How to apply the Apache License to your work.\n\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n\n   Copyright [yyyy] [name of copyright owner]\n\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.",
  "README.md": "# d-Stor\nd-Stor is a decentralized cloud storage platform utilizing decentralized encryption, access control and identity management for one of the first fully decentralized cloud storage platforms. \n\n# Stack\n- Chainsafe Storage API - Filecoin storage: https://docs.storage.chainsafe.io/\n- Lit Protocol - decentralized encryption and access control: https://developer.litprotocol.com/\n- Ceramic Network - Decentralized database: https://developers.ceramic.network/learn/welcome/\n- Self.id - Decentralized ID: https://self.id/\n- OpenZeppelin - NFT minting: https://docs.openzeppelin.com/\n- Hardhat - dApp development framework: https://hardhat.org/\n\n# User flow\nUsers who connect to d-Stor for the first time will be prompted to mint and NFT that will serve as the access control condition for decrypting their user info stored on Ceramic Network. Additionally, a Filecoin storage bucket will be created on first login using the Chainsafe API which will then be used for uploading and downloading files to/from Filecoin. Lit Protocol will use the newly minted NFT to decrypt all assets stored via chainsafe, resulting in secure and private decentralized cloud storage. The encryption key needed to access files will itself be encrypted and stored on the Ceramic network and associated with a self.id instance. Only the owner of the wallet that holds the access NFT will be able to decrypt any data, allowing for fully decentrtalized access control.\n\n# Project Roadmap\n- [x] ~~October 2022 - Implement upload/download feature, launch on testnet~~\n- [x] November 2022 - Front end styling and UX improvement\n- [x] January 2023 - Feature Additions: Multiple Folder support, folder and file search, rename/delete files.\n",
  "contracts": {
    "MintNFT.sol": "// contracts/GameItem.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\ncontract MintAccessNft is ERC721URIStorage {\n    event NFTMinted(uint256 indexed NewItemId);\n    uint256 tokenId = 1;\n    mapping (address => uint256) public tokenAddress;\n    mapping (uint256 => bool) public tokenExists;\n\n    constructor() ERC721(\"dStorAccess\", \"DSA\") {}\n\n    function mintToken() \n        public\n    {  \n        require(!tokenExists[tokenId], \"token already exists\");\n        _safeMint(msg.sender, tokenId);\n        tokenAddress[msg.sender] = tokenId;\n        tokenExists[tokenId] = true;\n        tokenId++;\n    }\n\n    function getMyTokens() public view returns (uint256) {\n        return tokenAddress[msg.sender];\n    }\n}"
  },
  "downloads": {
    ".gitkeep": ""
  },
  "hardhat.config.js": "require(\"@nomicfoundation/hardhat-toolbox\");\nrequire(\"@nomiclabs/hardhat-ethers\");\nrequire('dotenv').config();\n\n/** @type import('hardhat/config').HardhatUserConfig */\nmodule.exports = {\n  solidity: \"0.8.17\",\n  networks: {\n    hardhat: {\n      chainId: 1337\n    },\n    goerli: {\n      url: process.env.GOERLI_API_URL,\n      accounts: [process.env.GOERLI_PRIVATE_KEY]\n    },\n    polygon: {\n      url: process.env.POLYGON_API_URL,\n      accounts: [process.env.GOERLI_PRIVATE_KEY]\n    }\n  }\n};\n",
  "package.json": {
    "name": "hardhat",
    "version": "0.1.0",
    "private": true,
    "dependencies": {
      "@headlessui/react": "^1.7.3",
      "@heroicons/react": "^2.0.13",
      "@lit-protocol/sdk-browser": "^1.1.226",
      "@nomicfoundation/hardhat-toolbox": "^2.0.0",
      "@openzeppelin/contracts": "^4.7.3",
      "@self.id/framework": "^0.3.3",
      "@self.id/web": "^0.5.0",
      "@testing-library/jest-dom": "^5.16.5",
      "@testing-library/react": "^13.4.0",
      "@testing-library/user-event": "^13.5.0",
      "axios": "^1.1.3",
      "connect-pg-simple": "^7.0.0",
      "cookie-parser": "^1.4.6",
      "dotenv": "^16.0.2",
      "express": "^4.18.1",
      "express-session": "^1.17.3",
      "filereader": "^0.10.3",
      "form-data": "^4.0.0",
      "multer": "^1.4.5-lts.1",
      "node-fetch": "^3.2.10",
      "nodemon": "^2.0.20",
      "progress": "^2.0.3",
      "react": "^18.2.0",
      "react-dom": "^18.2.0",
      "react-icons": "^4.6.0",
      "react-loader-spinner": "^5.3.4",
      "react-modal": "^3.16.1",
      "react-router-dom": "^6.4.1",
      "react-scripts": "5.0.1",
      "web-vitals": "^2.1.4",
      "web3": "^1.8.0"
    },
    "proxy": "http://localhost:3001",
    "engines": {
      "node": "18.x",
      "npm": "8.12.x"
    },
    "scripts": {
      "start": "node src/server/index.js",
      "startdev": "react-scripts start",
      "build": "react-scripts build",
      "test": "react-scripts test",
      "dev": "nodemon ./src/server/index.js",
      "eject": "react-scripts eject"
    },
    "eslintConfig": {
      "extends": [
        "react-app",
        "react-app/jest"
      ]
    },
    "browserslist": {
      "production": [
        ">0.2%",
        "not dead",
        "not op_mini all"
      ],
      "development": [
        "last 1 chrome version",
        "last 1 firefox version",
        "last 1 safari version"
      ]
    },
    "devDependencies": {
      "@nomiclabs/hardhat-ethers": "^2.1.1",
      "ethers": "^5.7.1",
      "hardhat": "^2.11.2",
      "tailwindcss": "^3.2.2"
    }
  },
  "public": {
    "index.html": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <meta\n      name=\"description\"\n      content=\"Web site created using create-react-app\"\n    />\n    <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo192.png\" />\n    <!--\n      manifest.json provides metadata used when your web app is installed on a\n      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\n    -->\n    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\n    <!--\n      Notice the use of %PUBLIC_URL% in the tags above.\n      It will be replaced with the URL of the `public` folder during the build.\n      Only files inside the `public` folder can be referenced from the HTML.\n\n      Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will\n      work correctly both with client-side routing and a non-root public URL.\n      Learn how to configure a non-root public URL by running `npm run build`.\n    -->\n    <title>dStor</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n    <!--\n      This HTML file is a template.\n      If you open it directly in the browser, you will see an empty page.\n\n      You can add webfonts, meta tags, or analytics to this file.\n      The build step will place the bundled scripts into the <body> tag.\n\n      To begin the development, run `npm start` or `yarn start`.\n      To create a production bundle, use `npm run build` or `yarn build`.\n    -->\n  </body>\n</html>\n",
    "manifest.json": {
      "short_name": "dStor",
      "name": "Create React App Sample",
      "icons": [
        {
          "src": "favicon.ico",
          "sizes": "64x64 32x32 24x24 16x16",
          "type": "image/x-icon"
        },
        {
          "src": "logo192.png",
          "type": "image/png",
          "sizes": "192x192"
        },
        {
          "src": "logo512.png",
          "type": "image/png",
          "sizes": "512x512"
        }
      ],
      "start_url": ".",
      "display": "standalone",
      "theme_color": "#000000",
      "background_color": "#ffffff"
    },
    "robots.txt": "# https://www.robotstxt.org/robotstxt.html\nUser-agent: *\nDisallow:\n"
  },
  "scripts": {
    "deploy.js": "// We require the Hardhat Runtime Environment explicitly here. This is optional\n// but useful for running the script in a standalone fashion through `node <script>`.\n//\n// You can also run a script with `npx hardhat run <script>`. If you do that, Hardhat\n// will compile your contracts, add the Hardhat Runtime Environment's members to the\n// global scope, and execute the script.\nconst hre = require(\"hardhat\");\n\nasync function main() {\n  const MintAccessNft = await hre.ethers.getContractFactory(\"MintAccessNft\");\n  const mintAccessNft = await MintAccessNft.deploy();\n\n  await mintAccessNft.deployed();\n\n  console.log(\"Contract deployed address is:\", mintAccessNft.address)\n\n}\n\n// We recommend this pattern to be able to use async/await everywhere\n// and properly handle errors.\nmain().catch((error) => {\n  console.error(error);\n  process.exitCode = 1;\n});\n"
  },
  "src": {
    "App.css": ".App {\n  text-align: center;\n}\n\n.App-logo {\n  height: 40vmin;\n  pointer-events: none;\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  .App-logo {\n    animation: App-logo-spin infinite 20s linear;\n  }\n}\n\n.App-header {\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n}\n\n.App-link {\n  color: #61dafb;\n}\n\n@keyframes App-logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n",
    "App.js": "\nimport React, { useState, useEffect } from \"react\";\nimport { Provider } from '@self.id/framework';\nimport {BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom'\nimport Home from './components/Home'\n\nimport styles from './style'\nimport Navbar  from './style_components/Navbar'\n\nconst LazyLogin = React.lazy(() => import (\"./components/Login\"))\nconst LazyStorage = React.lazy(() => import (\"./components/Storage\"))\n\n\nfunction App( {children}) {\n  const [authSig, setAuthSig] = useState(null)\n  const storedSig = JSON.parse(window.localStorage.getItem(\"lit-auth-signature\"));\n  const ceramic_cookie_exists = document.cookie.includes('self.id')\n\n  // If no authSig in state, attempt to get it from local storage\n\n\tuseEffect(() => {\n    if (!authSig && ceramic_cookie_exists) {\n      try {\n        setAuthSig(storedSig)\n      } catch (error) {\n        console.error(error)\n      } \n    }\n    return\n  }, [storedSig, authSig, ceramic_cookie_exists])\n\n  console.log(\"App's STATE sig :\", authSig)\n  console.log(\"App's SESSION sig :\", storedSig)\n  console.log(\"APP COOKIES:\",ceramic_cookie_exists)\n\n\n\n  return (\n    <>\n\n    <Provider client={{ ceramic: 'testnet-clay' }}>\n      <Router>\n        <React.Suspense fallback='Loading...'>\n        <Routes>\n          <Route path='/' element={<Home />}/>\n          <Route path='/login' element={authSig && window.sessionStorage.getItem('db_user') ? <Navigate to='/storage' /> : <LazyLogin setAuthSig={setAuthSig}/> }/>\n          <Route path='/storage' element={<LazyStorage authSig={storedSig}/>}/>\n        </Routes>\n        </React.Suspense>\n      </Router>\n    </Provider>\n    </>\n  )\n}\n\nexport default App;\n",
    "App.test.js": "import { render, screen } from '@testing-library/react';\nimport App from './App';\n\ntest('renders learn react link', () => {\n  render(<App />);\n  const linkElement = screen.getByText(/learn react/i);\n  expect(linkElement).toBeInTheDocument();\n});\n",
    "assets": {
      "index.js": "import bill from \"./bill.png\";\nimport binance from \"./binance.png\";\nimport card from \"./card.png\";\nimport coinbase from \"./coinbase.png\";\nimport dropbox from \"./dropbox.png\";\nimport logo from \"./logo.png\";\nimport quotes from \"./quotes.svg\";\nimport robot from \"./robot.png\";\nimport send from \"./Send.svg\";\nimport shield from \"./Shield.svg\";\nimport star from \"./Star.svg\";\nimport menu from \"./menu.svg\";\nimport close from \"./close.svg\";\nimport google from \"./google.svg\";\nimport apple from \"./apple.svg\";\nimport arrowUp from \"./arrow-up.svg\";\nimport discount from \"./Discount.svg\";\nimport facebook from \"./facebook.svg\";\nimport instagram from \"./instagram.svg\";\nimport linkedin from \"./linkedin.svg\";\nimport twitter from \"./twitter.svg\";\nimport people01 from \"./people01.png\";\nimport people02 from \"./people02.png\";\nimport people03 from \"./people03.png\";\nimport logo_white from \"./logo_white.png\";\nimport cloud_comp from \"./cloud_comp.png\";\nimport cloud_2 from \"./cloud_2.svg\";\n\n\nexport {\n  bill,\n  binance,\n  card,\n  coinbase,\n  dropbox,\n  logo,\n  quotes,\n  robot,\n  send,\n  shield,\n  star,\n  menu,\n  close,\n  google,\n  apple,\n  arrowUp,\n  discount,\n  facebook,\n  instagram,\n  linkedin,\n  twitter,\n  people01,\n  people02,\n  people03,\n  cloud_comp,\n  logo_white,\n  cloud_2\n};\n"
    },
    "components": {
      "DecryptFile.js": "import LitJsSdk from \"@lit-protocol/sdk-browser\";\n\n\nexport async function decryptFile (encryptedFile, encryptedSymmetricKey, fileName)  {\n\t\tconst client = await new LitJsSdk.LitNodeClient();\n\t\tclient.connect();\n\t\twindow.litNodeClient = client;\n    if (!client.litNodeClient) {\n      await client.connect()\n    } \n\t\tconsole.log('ARGS IN DECRYPT FILE:', encryptedFile, encryptedSymmetricKey)\n\t\tconst db_user = await JSON.parse(sessionStorage.getItem('db_user'))\n\t\tconst accessControlConditions = [db_user.nft_info]\n    const chain = 'polygon'  \n    const authSig = await JSON.parse(window.localStorage.getItem(\"lit-auth-signature\"))\n\t\tconst symmetricKey = await window.litNodeClient.getEncryptionKey({\n      accessControlConditions,\n      toDecrypt: encryptedSymmetricKey,\n      chain,\n      authSig,\n    });\n\t\tconsole.log('SYMMKEY IN DECRYPT FILE:', symmetricKey)\n\t\tconst decryptedFile =  await LitJsSdk.decryptFile({file: encryptedFile, symmetricKey})\n\t\tconst uint8View = new Uint8Array(decryptedFile);\n\t\tconsole.log('DECRYPTED FILE FROM UPLOAD:', uint8View)\n\t\tawait LitJsSdk.downloadFile({\n\t\t\tfilename: fileName, \n\t\t\tdata: uint8View, \n\t\t\tmimetype: 'application/octet-stream'\n\t\t})\n\t\tconsole.log(decryptedFile)\n\n\n\t\treturn decryptedFile\n  }",
      "DeleteFile.js": "import React, {useState} from 'react';\nimport Modal from 'react-modal';\nimport axios from 'axios';\nimport { useViewerRecord } from \"@self.id/framework\";\nimport {encryptUser} from './EncryptUser';\nimport {LineWave} from 'react-loader-spinner';\n\nfunction DeleteFile({deletingFile, setDeletingFile, currentFolderRef, file, bucket_id, user}) {\n\t//const [modalIsOpen, setModalIsOpen] = useState(false)\n\tconst [processingDelete, setProcessingDelete] = useState(false)\n\n\tconst record = useViewerRecord('basicProfile')\n\n\tconst handleDelete = async () => {\n\t\tsetProcessingDelete(true)\n\t\tconsole.log('delete clicked')\n\t\tconst path = currentFolderRef.current + '/' + file;\n\t\tconst accessControlConditions = user.nft_info\n\t\tconst body = {\n\t\t\tpath: path,\n\t\t\tbucket_id: bucket_id,\n\t\t}\n\t\ttry {\n\t\t\tdelete user.files[file]\n\t\t\tconst stringToEncrypt = JSON.stringify(user)\n\t\t\tconst encStringToStore = await encryptUser(stringToEncrypt, accessControlConditions, user)\n\t\t\t\n\t\t\tconst response = await axios({\n\t\t\t\tmethod: 'POST',\n\t\t\t\turl: '/new_folder',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tdata: body,\n\t\t\t})\n\t\t\tconsole.log(response)\n\t\t\tawait record.merge({dstor_id: encStringToStore})\n\t\t\tsetProcessingDelete(false)\n\t\t\tsetDeletingFile(false)\n\t\t} catch (error) {\n\t\t\tconsole.log('error deleting file:', error)\n\t\t}\n\t}\n\n\tconst customStyles = {\n\t\tcontent: {\n\t\t\ttop: '50%',\n\t\t\tleft: '50%',\n\t\t\tright: 'auto',\n\t\t\tbottom: 'auto',\n\t\t\tmarginRight: '-50%',\n\t\t\ttransform: 'translate(-50%, -50%)',\n\t\t\tmaxWidth: '400px', // set max width of the modal\n\t\t\tmaxHeight: '80vh', // set max height of the modal\n\t\t},\n\t};\n\tconst buttonStyle = {\n\n    color: 'white',\n    border: 'none',\n    padding: '8px 16px',\n    borderRadius: '4px',\n    cursor: 'pointer',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n  };\n\t\n\treturn (\n\n\t\t<Modal isOpen={deletingFile === file} style={customStyles} shouldFocusAfterRender={true}>\n\t\t\t\n\t\t\t{processingDelete ? (\n\t\t\t\t<div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', width: '250px'}}>\n\t\t\t\t<h2>Deleting File...</h2>\n\t\t\t\t<LineWave color=\"#FF0000\" size={200} />\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t<div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\n\t\t\t\t<h2 style={{textAlign: 'center'}}>Are you sure you want to delete {file}?</h2>\n\t\t\t\t<button className=\"hover:bg-gray-300 rounded-md\" style={{ margin: '10px', padding: '8px'}} onClick={() => setDeletingFile(false)}>Cancel</button>\n\t\t\t\t<button className=\"bg-red-600 hover:bg-red-800\" style={buttonStyle} onClick={handleDelete}>Delete</button>\n\t\t\t</div>\n\t\t\t)}\n\t\t</Modal>\n\n\t)\n}\n\nexport default DeleteFile",
      "Download.js": "import React, {useState, useEffect}  from 'react'\nimport {decryptFile} from './DecryptFile'\nimport { HiOutlineDownload } from 'react-icons/hi';\nimport {Blocks} from 'react-loader-spinner';\n\nfunction Download(props) {\nconst [downloading, setDownloading] = useState(false)\nconst [file, setFile] = useState(true)\n\nconst file_list = props.files\nconst file_path = file_list[props.file_name][1]\nconst bucket_id = props.bucket_id\nconst folder = file_list[props.file_name][2]\nconsole.log('PROPS IN DOWNLOAD FROM FILES COMP',file_list, props.file_name, file_path, bucket_id.bucket_id, folder )\nconst handleClick = async () => {\n\tsetDownloading(true)\n\tconsole.log('click handler')\n\tconsole.log('PROPS IN DOWNLOAD FROM FILES COMP',file_list, file_path, bucket_id.bucket_id, folder )\n\tconst body = {\n\t\tbucket_id: bucket_id,\n\t\tfile_path: file_path,\n\t\tfile_name: props.file_name,\n\t\tfolder: folder\n\t}\n\t\n\tconst body_string = JSON.stringify(body)\n\tconsole.log('body in download request:', body_string)\n\tconst api_url = '/download'\n\tconst response = await fetch(api_url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: body_string\n\t})\n\t// send chainsafe download to server\n\t// get and decrypt file\n\tconst encryptedFile = await response.blob()\n\tconst encryptedSymmetricKey = file_list[props.file_name][0]\n\ttry {\n\t\tconst decryptedFile = await decryptFile(encryptedFile, encryptedSymmetricKey, props.file_name)\n\t\tconsole.log('DECRYPTED FILE ATTEMPT:', decryptedFile)\n\n\t}catch (err){\n\t\tconsole.log(err)\n\t}\n\ttry {\n\t\tawait fetch('/unlink_download', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(body)\n\t\t});\t\n\t} catch(error) {\n\t\tconsole.log(error)\n\t}\n\tsetFile((prev) => !prev )\n\tprops.setShowOptions(false)\n}\n\nuseEffect(() => {\n\tif (downloading && !file) {\n\t\tsetDownloading(false)\n\t\tsetFile((prev) => !prev )\n\t}\n\n}, [downloading, file])\n\n\nif (downloading) {\n\treturn (\n\t\t<Blocks\t\t\t\t\t\n\t\tcolor=\"#00BFFF\"\n\t\theight={30}\n\t\twidth={80}\n\t\tclassName=\"\" />\n\t)\n}\n\treturn (\n\t\t< >\n\t\t<button style={{width: '100%'}} className=\"block hover:bg-gray-300 rounded-md\" onClick={handleClick}>Download</button>\n\t\t</>\n\t)\n}\n\nexport default Download",
      "EncryptUser.js": "import LitJsSdk from \"@lit-protocol/sdk-browser\";\n\n\nexport async function encryptUser (stringToEncrypt, accessControlConditions, db_user)  {\n\tconsole.log('INSIDE ENCRYPT USER')\n\t\tconst client = await new LitJsSdk.LitNodeClient();\n\t\tclient.connect();\n\t\twindow.litNodeClient = client;\n    if (!client.litNodeClient) {\n      await client.connect()\n    } \n\n    const chain = 'polygon'  \n    const authSig = await JSON.parse(window.localStorage.getItem(\"lit-auth-signature\"))\n    // encrypting a string using access control conditions and authsig from existing app state\n    const { encryptedString, symmetricKey } = await LitJsSdk.encryptString(stringToEncrypt);\n    // step below is necessary to get key used to decrypt.\n    // In user retrieval use case, encrypted string would get uploaded to ceramic\n    // encryptedSymmmetricKey would go to database\n    const encryptedSymmetricKey = await window.litNodeClient.saveEncryptionKey({\n      accessControlConditions,\n      symmetricKey,\n      authSig,\n      chain,\n    });\n\t\t// keyToStore gets sent to postgres db\n    const keyToStore = LitJsSdk.uint8arrayToString(encryptedSymmetricKey, \"base16\")\n\t\t// encStringToStore gets uploaded to Ceramic\n    const encStringToStore = await LitJsSdk.blobToBase64String(encryptedString)\n\n\t\tconst body = {\n\t\t\tkey: keyToStore,\n\t\t\taddress: db_user.address,\n\t\t\taccessControlConditions: accessControlConditions[0]\n\t\t};\n\t\tconst bodyString = JSON.stringify(body)\n\t\tconst api_url = '/update'\n\t\tconst response =  await fetch(api_url, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: bodyString\n\t\t});\t\n\t\tconst responseJSON = await response.json();\n\t\tconst userString = JSON.stringify(responseJSON.rows[0])\n\t\twindow.sessionStorage.setItem('db_user', userString)\n\t\tconsole.log(\"RESPONSE FROM DB UPDATE:\", responseJSON.rows[0])\n\t\t\n\t\treturn encStringToStore\n  }",
      "Files.js": "import {useRef, useState, useEffect} from 'react'\nimport Download from './Download'\nimport folderIcon from '../assets/folder.png'\nimport { HiDotsVertical, HiTrash, HiPencil } from \"react-icons/hi\";\nimport RenameFile from './RenameFile'\nimport DeleteFile from './DeleteFile'\n\n\nconst Files = ({bucket_id, filesRef, foldersRef, currentFolderRef, modalIsOpen, searchResults, user}) => {\n\n\tconst filesArrayRef =  useRef([])\n\tconst files = filesRef.current\n\tconst [currentFiles, setCurrentFiles] = useState(filesRef.current)\n\tconst [currentFolders, setCurrentFolders] = useState(['/'])\n\tconst [showOptions, setShowOptions] = useState(null)\n\tconst [editingName, setEditingName] = useState(null)\n\tconst [deletingFile, setDeletingFile] = useState(null)\n\tconst [downloading, setDownloading] = useState(false)\n\tconst user_files = Object.keys(filesRef.current)\n\tconst prop_files = filesRef.current\n\n\tconsole.log('nav button array:', currentFolderRef.current, currentFolderRef.current === '/' ? 'Home' : currentFolderRef.current.split('/'))\n\tfunction getCurrentFolders () {\n\t\tconst directDescendants = foldersRef.current.filter(folder => {\n\t\t\t// Check if the folder starts with the current folder path followed by a slash\n\t\t\tconst grandChildren = folder.replace(currentFolderRef.current + '/', '');\n\t\t\tconst isDirectDescendant = folder.startsWith(currentFolderRef.current + \"/\") && !grandChildren.slice(1).includes('/');\n\t\t\t// If the current folder is '/', only return folders that don't have additional slashes\n\t\t\tconsole.log('folder slice:', folder, folder.slice(1), folder.slice(1).includes('/'))\n\t\t\tconst isRootDirectDescendant = currentFolderRef.current === '/' && !folder.slice(1).includes('/');\n\t\t\treturn isDirectDescendant || isRootDirectDescendant;\n\t\t});\n\t\n\t\treturn directDescendants;\n\t}\n\n\tconst foldersArrayRef = useRef(getCurrentFolders())\n\n\tfor (let file of user_files){\n\t\tif (!filesArrayRef.current.includes(file) && prop_files[file][2] === currentFolderRef.current) {\n\t\t\tfilesArrayRef.current.push(file) \n\t\t}\n\t}\n\tconsole.log('Files Ref passed from storage:', bucket_id, filesRef.current, currentFolderRef.current, user_files)\n\tconsole.log('modal open:', modalIsOpen)\n\n\t\tconst handleFolderChange = async (folder) => {\n\t\t\tconsole.log('FOLDER CLICKED:', folder, filesRef.current)\n\t\t\tcurrentFolderRef.current = await folder\n\t\t\tfoldersArrayRef.current = await getCurrentFolders()\n\t\t\tfilesArrayRef.current = []\n\t\t\tconsole.log('FILES AFTER FOLDER CLICK:', filesRef.current)\n\t\t\tfor (let file of user_files){\n\t\t\t\tconsole.log('current folder after folder click:', currentFolderRef.current)\n\t\t\t\tif (prop_files[file][2] === currentFolderRef.current) {\n\t\t\t\t\tfilesArrayRef.current.push(file)\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetCurrentFiles(filesArrayRef.current)\n\t\t\tconsole.log('FILES AFTER FOLDER CLICK:', filesArrayRef.current)\n\t\t}\n\n\t\tconst handleOptionsClick = (file) => {\n\t\t\tconsole.log('options clicked:', file)\n\t\t\tsetShowOptions(file)\n\t\t}\n\n\t\tconst handleEditNameClick = (file) => {\n\t\t\tconsole.log('edit name clicked:',file)\n\t\t\tsetEditingName(file)\n\t\t}\n\n\t\tconst handleDeleteClick = (file) => {\n\t\t\tconsole.log('delete clicked:', file)\n\t\t\tsetDeletingFile(file)\n\t\t\tsetShowOptions(null)\n\t\t}\n\n\n\t\tuseEffect(() => {\n\t\t\thandleFolderChange(currentFolderRef.current)\n\t\t\tsetCurrentFolders(currentFolderRef.current === '/' ? '/' : currentFolderRef.current.split('/'))\n\t\t\tconsole.log('current folders from useEffect:', currentFolderRef.current )\n\t\t}\n\t\t, [foldersRef.current, currentFolderRef.current, searchResults])\n\n\n\tif (filesArrayRef.length !== 0) {\n\t\treturn (\n\t\t<>\n\t\t\t<div style={{display: 'flex', flexDirection: 'row', marginBottom: '20px'}}>\n\t\t\t\t<button className=\"hover:bg-gray-300 rounded-md\" style={{fontWeight: 'bold', marginRight: '10px'}} onClick={() => handleFolderChange('/', user_files, prop_files)}>Home</button>\n\t\t\t\t{currentFolderRef.current.split('/').map((folder, index) => {\n\t\t\t\t\tconst path = currentFolderRef.current.split('/').slice(0, index + 1).join('/');\n\t\t\t\t\tconsole.log('folder nav info:', currentFolderRef.current, currentFolderRef.current.split('/'), path, folder, index)\n\t\t\t\t\tif (path === '' || path === '/') {\n\t\t\t\t\t\treturn (null)\n\t\t\t\t\t} else {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={index}>\n\t\t\t\t\t\t\t{'>'}\n\t\t\t\t\t\t\t<button className=\"hover:bg-gray-300 rounded-md\" style={{fontWeight: 'bold',marginRight: '10px', marginLeft: '10px'}} onClick={() => handleFolderChange(path, user_files, prop_files)}> {folder} </button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<div style={{display: 'flex', flexDirection: 'column'}}>\n\t\t\t\t{foldersArrayRef.current.map(folder => {\n\t\t\t\t\tconst replaceValue = (currentFolderRef.current === '/' ? currentFolderRef.current : currentFolderRef.current + '/');\n\t\t\t\t\tconst newName = folder.replace(replaceValue, '');\n\t\t\t\t\tconsole.log('folder rendering info:', folder, newName, currentFolderRef.current)\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={folder} style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n\t\t\t\t\t\t\t<button onClick={() =>handleFolderChange(folder)}>\n\t\t\t\t\t\t\t\t<div style={{display: 'flex', alignItems: 'center'}}>\n\t\t\t\t\t\t\t\t\t<img src={folderIcon} alt=\"folder\" style={{width: '20px', height: '20px', marginRight: '10px'}}/>\n\t\t\t\t\t\t\t\t\t<span style={{fontSize: '16px'}}>{newName}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t)}\n\t\t\t</div>\n\n\t\t\t<div className=\"mt-2 flex flex-col\">\n\t\t\t\t<div className=\"-my-2 overflow-x-auto -mx-4 sm:-mx-6 lg:-mx-8\">\n\t\t\t\t\t<div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n\t\t\t\t\t\t<div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n\t\t\t\t\t\t\t<table className=\"min-w-full divide-y divide-gray-200\">\n\t\t\t\t\t\t\t\t<thead className=\"bg-gray-50\">\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<th\n\t\t\t\t\t\t\t\t\t\t\tscope=\"col\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<span> Files</span>\n\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t<th\n\t\t\t\t\t\t\t\t\t\t\tscope=\"col\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<span> Options</span>\n\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t<tbody\n\t\t\t\t\t\t\t\t\tclassName=\"bg-white divide-y divide-gray-200\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{filesArrayRef.current.map(file => (\n\t\t\t\t\t\t\t\t\t\t<tr className=\"hover:bg-slate-400\">\n\t\t\t\t\t\t\t\t\t\t\t{editingName === file ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<RenameFile setShowOptions={setShowOptions} user={user} file={file} setEditingName={setEditingName} />\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<td className=\"\" key={file}>{file}</td>\n\t\t\t\t\t\t\t\t\t\t<td style={{display: 'flex', marginLeft: '30px'}}>\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={() => handleOptionsClick(file)}><HiDotsVertical size={30}/></button>\n\t\t\t\t\t\t\t\t\t\t\t{showOptions === file && (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"absolute z-10\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"fixed inset-0\" onClick={() => setShowOptions(null)} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"origin-top-left absolute right-auto w-56 mt-2 bg-white divide-y divide-gray-100 rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"py-1\" style={{display: 'flex', flexDirection: 'column', alignItems: 'center', }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', width: '100%'}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button style={{width: '100%'}} className=\"block hover:bg-gray-300 rounded-md\" onClick={() => handleEditNameClick(file)}>Edit</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', width: '100%', justifyContent: 'center'}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button style={{width: '100%'}}onClick={() => handleDeleteClick(file)}className=\"block hover:bg-gray-300 rounded-md\">Delete</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', width: '100%', justifyContent: 'center'}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Download setShowOptions={setShowOptions} bucket_id={bucket_id} file_name={file} files={prop_files} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</td> \n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t)} \n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t{deletingFile === file && (\n\t\t\t\t\t\t\t\t\t\t\t<DeleteFile user={user} bucket_id={bucket_id} currentFolderRef={currentFolderRef} file={file} setDeletingFile={setDeletingFile} deletingFile={deletingFile} />\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t\t);\n\t} else {\n\t\treturn('No files to view yet')\n\t}\n\t}\n\nexport default Files",
      "Home.js": "import styles from '../style'\nimport Hero from '../style_components/Hero'\nimport Business from '../style_components/Business'\nimport Billing from '../style_components/Billing'\nimport Navbar from '../style_components/Navbar'\nconst Home = () => {\n\n\t\n\tconst handleClick = async () =>{\n\t\twindow.location.replace('/login')\n\t}\n\n\treturn (\n    <>\n    <div className=\"bg-primary w-full overflow-hidden\">\n      <div className={`${styles.paddingX} ${styles.flexCenter}`}>\n        <div className={`${styles.boxWidth}`}>\n          <Navbar />\n        </ div>\n      </div>\n    </div>\n\n      <div className={`bg-primary ${styles.flexStart}`}>\n        <div className={`${styles.boxWidth}`}>\n          <Hero />\n        </div>\n      </div>\n\n      <div className={`bg-primary ${styles.paddingX} ${styles.flexStart}`}>\n        <div className={`${styles.boxWidth}`}>\n\n          <Business />\n          <Billing />\n\n        </ div>\n      </div>\n    </>\n\n\t)\n}\n\nexport default Home",
      "Login.js": "import React, {Fragment, useState, useEffect} from 'react';\nimport LitJsSdk from \"@lit-protocol/sdk-browser\";\nimport {useViewerConnection, EthereumAuthProvider, useViewerRecord } from \"@self.id/framework\"\nimport styles from '../style'\nimport AppNavbar from '../style_components/AppNavbar'\nimport MintLoadingModal from '../style_components/MintLoadingModal'\n\nconst Login = ({setAuthSig}) => {\n\tconst record =  useViewerRecord('basicProfile');\n\tconst [connection, connect, disconnect] = useViewerConnection();\n\tconst [accounts, setAccounts] = useState(null)\n\tconst [sigsCollected, setSigsCollected] = useState(false)\n\tconst [minting, setMinting] = useState(false)\n\n\tconst ceramic_cookie_exists = document.cookie.includes('self.id')\n\n\tconst connectWallet = async (sig) => {\n\t\ttry {\n\t\tconst response =  await fetch('/connect_wallet', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: sig\n\t\t});\t\n\t\tconst responseResult = await response.json()\n\t\tconsole.log('response from connectWallet:', responseResult)\n\t\tif (responseResult.error) {\n\t\t\tconsole.log('no user found')\n\t\t\treturn null\n\t\t} else {\n\t\t\tconsole.log('found user')\n\t\t\tconst body_string = JSON.stringify(responseResult)\n\t\t\tconsole.log('BODY STRING;', body_string)\n\t\t\twindow.sessionStorage.setItem('db_user', body_string)\n\t\t\treturn responseResult;\n\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log('something went wrong in wallet connect', error)\n\t\t\tthrow error\n\t\t}\n\t\t}\n\n\t\tconst litSignIn = async () => {\n\t\t\treturn await LitJsSdk.checkAndSignAuthMessage({chain: \"polygon\",});\n\t\t}\n\n\t\tconst newUser = async (litAuthSig) => {\n\t\t\tconsole.log('GOT TO NEW USER FLOW')\n\t\t\tconst address = litAuthSig.address\n\t\t\t\n\t\t\t\ttry {\n\t\t\t\tconst response = await fetch('/new_user', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({address: address})\n\t\t\t\t})\n\t\t\t\tconst db_user = await response.json()\n\t\t\t\tdb_user.files = {}\n\t\t\t\tdb_user.folders = []\n\t\t\t\tconst db_user_string = JSON.stringify(db_user)\n\t\t\t\twindow.sessionStorage.setItem('db_user', db_user_string)\n\t\t\t\treturn {db_user}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error)\n\t\t\t\t\tthrow error\n\t\t\t\t}\n\t\t}\n\n\t\tconst ceramicSignIn = async (account) => {\n\t\t\ttry {\n\t\t\tconst accounts = await window.ethereum.request({\n\t\t\t\tmethod: 'eth_requestAccounts',\n\t\t\t});\n\t\t\tconsole.log('accounts info in ceramic signin:', accounts[0], account)\n\t\t\tawait connect(new EthereumAuthProvider(window.ethereum, accounts[0]));\n\t\t} catch (error) {\n\t\t\tconsole.log('error getting accounts:', error)\n\t\t\tthrow error\n\t\t}\n\t\t\t\n\t\t}\n\t\n\tconst handleClick = async (e) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\t// Get required signatures, check if there's already a user in the db for this address\n\t\t\t\n\t\t\tconst litAuthSig = await litSignIn();\n\t\t\tawait ceramicSignIn(litAuthSig.address);\n\t\t\tconst sigToSend = JSON.stringify(litAuthSig);\n\t\t\tconst existingUser = await connectWallet(sigToSend);\n\t\t\t\n\t\t\tconsole.log('RECORD CONTENT after lit and ceramic sign:', record.content, connection)\n\n\t\t\t\tif (!existingUser){\n\t\t\t\t\t// New User Flow\n\t\t\t\t\tconst {mint} = await import('./NewUser')\n\t\t\t\t\tconst {encryptUser} = await import('./EncryptUser')\n\n\t\t\t\t\t// Nothing else should happen if minting fails, attempt mint first\n\t\t\t\t\tsetMinting(true)\n\t\t\t\t\tconst accessControlConditions = await mint();\n\n\t\t\t\t\tconst {db_user} = await newUser(litAuthSig);\n\t\t\t\t\tdb_user.nft_info = accessControlConditions;\n\t\t\t\t\tconst db_user_string = JSON.stringify(db_user)\n\n\t\t\t\t\tconst encStringToStore = await encryptUser(db_user_string, accessControlConditions, db_user)\n\t\t\t\t\twindow.sessionStorage.setItem('encryptedString', encStringToStore)\n\t\t\t\t\tsetSigsCollected(true)\n\t\t\t\t} else {\n\t\t\t\t\t// Existing User Flow\n\t\t\t\t\tawait setAuthSig(litAuthSig)\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\tconsole.log('error in login', error)\n\t\t\tif (error.message === 'mint error'){\n\t\t\t\twindow.alert('Error minting NFT. Please try again.')\n\t\t\t\tsetMinting(false)\n\t\t\t} else {\n\t\t\t\twindow.alert('Error signing in. Please try again.')\n\t\t\t\tsetMinting(false)\n\t\t\t}\n\t\t\t} \n\t}\n\n\tuseEffect(() => {\n\t\tconsole.log('GOT TO USE EFFECT ON LOGIN')\n\t\tconst updateRecord = async () => {\n\t\t\tconst litAuthSig = localStorage.getItem('lit-auth-signature')\n\t\t\tconst encryptedUserString = window.sessionStorage.getItem('encryptedString')\n\n\t\t\tif (ceramic_cookie_exists && record.content && !record.isMutating && encryptedUserString ){\n\t\t\t\tconsole.log(\"NEW USER CONDITION MET\")\n\t\t\t\tawait record.merge({dstor_id: encryptedUserString})\n\t\t\t\twindow.sessionStorage.removeItem('encryptedString')\n\t\t\t\tawait setAuthSig(litAuthSig)\n\t\t\t}\n\t\t}\t\n\tupdateRecord()\n\t})\n\t\n\n\tif (minting){\n\t\treturn(\n\t\t\t<MintLoadingModal />\n\t\t)\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t<div >\n\t\t\t<div className=\"bg-primary w-full overflow-hidden\">\n          <div className={`${styles.paddingX} ${styles.flexCenter}`}>\n            <div className={`${styles.boxWidth}`}>\n              <AppNavbar handleClick={handleClick} />\n            </ div>\n        </div>\n    </div>\n\t\t<div className={`flex-1 ${styles.flexStart} flex-col sm:px-16`} >\n\t\t<h2 className=\"font-poppins font-semibold xs:text-[35px] text-[10px] text-black xs:leading-[76.8px] leading-[66.8px] w-full\">Upload New File</h2>\n\t\t<input disabled ={true} type=\"file\" className=\" text-sm text-slate-500\n\t\t\tfile:mr-4 file:py-2 file:px-4\n\t\t\tfile:rounded-full file:border-0\n\t\t\tfile:text-sm file:font-semibold\n\t\t\tfile:bg-sky-50 file:text-sky-500\n\t\t\thover:file:bg-violet-100\n\t\t\"/>\n\t\t<button disabled={true} className=\"w-[100px] rounded-full bg-sky-500\">Upload</button>\n\t\n\t\t<br/>\n\t\t<h2 className='font-poppins font-semibold text-[30px]'>Please Connect Wallet to access account</h2>\n\t\t</div>\n\t</div>\n\t\t</Fragment>\n\t)\n}\n\nexport default Login;\n",
      "NewFolderModal.js": "",
      "NewUser.js": "\nimport mintAccessNFT from '.././mintAccessNft.json';\nimport {ethers} from 'ethers'\n\nexport async function mint () {\n\t// Goerli contract Address:\n\t //const contractAddress = '0x2Ff2440158aDB25A393F6539dE868b0B5F112Be6'\n\n\t// Polygon Contract Adress:\n\tconst contractAddress ='0xe8D0B85EcfFA16430D23e5c0630D1781BDC1A2E1'\n\n\tconst provider = new ethers.providers.Web3Provider(window.ethereum)\n\tconst signer =  provider.getSigner();\n\tconst contract = new ethers.Contract(\n\t\tcontractAddress,\n\t\tmintAccessNFT.abi,\n\t\tsigner\n\t)\n\tconsole.log('SIGNER FROM NEW USER:', signer)\n\tconst contractWithSigner = contract.connect(signer)\n\n\tconst accessControlConditions = [{\n\t\tchain: \"polygon\",\n\t\tmethod: \"balanceOf\",\n\t\tparameters: [\n\t\t\t':userAddress',\n\t\t\t//tokenId gets pushed here\n\t\t],\n\t\tcontractAddress: contractAddress,\n\t\treturnValueTest: {\n\t\t\tvalue: '0',\n\t\t\tcomparator: '>'\n\t\t},\n\t\tstandardContractType: 'ERC721'\n\t}];\n\n\ttry {\n\tconst tx = await contractWithSigner.mintToken();\n\tawait tx.wait()\n\tconst bigNumTokenId = await contractWithSigner.getMyTokens();\n\tconst tokenId = ethers.BigNumber.from(bigNumTokenId).toNumber()\n\tconst tokenIdString = tokenId.toString();\n\taccessControlConditions[0].parameters.push(tokenIdString)\n\n\treturn accessControlConditions\n\t} catch (error) {\n\t\tconsole.log(error)\n\t\tthrow new Error('mint error')\n\t}\n}\n\n\n  \n\n  \n  \n\n\n\n\n\n\n",
      "Record.js": "import React, {useEffect} from 'react';\nimport { useViewerRecord, useViewerConnection, EthereumAuthProvider } from '@self.id/framework';\nimport styles from '../style'\nimport Spinner from '../style_components/Spinner'\nimport { close, logo_white, menu } from '../assets'\n\nexport default function Record(props) {\n\tconst record = useViewerRecord('basicProfile')\n\tconst [connection, connect] = useViewerConnection();\n\n\n\tuseEffect(() => {\n\t\tif (connection.status === 'idle') {\n      const reconnect = async () => {\n        const authsig = JSON.parse(localStorage.getItem('lit-auth-signature'))\n        await connect(new EthereumAuthProvider(window.ethereum, authsig.address))\n      }\n      reconnect();\n    }\n\t\tif (!record.isLoading && record.content && !record.isMutating && record.content.dstor_id) {\n\t\t\tconsole.log(\"DSTOR ID FROM RECORD:\", record.content)\n\t\t\tprops.setUser(record.content.dstor_id)\n\t\t}\n\t\n\t\treturn\n\t},[record.isLoading, props, record.content, record, connect, connection.status])\n\t\n\t// TO DO replace div below with progress spinner\n\treturn (\n\n\t\t<>\n\t\t<div className=\"bg-primary w-full overflow-hidden\">\n\t\t<div className={`${styles.paddingX} ${styles.flexCenter}`}>\n\t\t\t<div className={`${styles.boxWidth}`}>\n\n\t\t\t<nav className=\"w-full flex py-3 justify-between items-center navbar\">\n\t\t\t\t<a href=\"/\">\n\t\t\t\t\t<img src={logo_white} alt=\"dstor\" className=\" ml-0 w-[85px] h-[75px]\"/>\n\t\t\t\t</a>\n\t\t\t\t<div className=\"hidden sm:ml-6 sm:block\">\n\t\t\t\t\t\t<div className=\"flex space-x-4\">\n\t\t\t\t\t\t\t<button className=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium hover:bg-teal-700\" disabled={true} aria-current=\"page\">Connecting..</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</nav>\n\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<Spinner />\n\t</>\n\n\t)\n}\n",
      "RenameFile.js": "import React, {useState} from 'react';\nimport { useViewerRecord } from \"@self.id/framework\";\nimport { FcCheckmark, FcCancel } from \"react-icons/fc\";\nimport {encryptUser} from './EncryptUser';\nimport {RotatingSquare} from 'react-loader-spinner';\n\nfunction RenameFile({file, setEditingName, user, setShowOptions}) {\n\n\tconst [newName, setNewName] = useState(file)\n\tconst [processingRename, setProcessingRename] = useState(false)\n\n\tconst record = useViewerRecord('basicProfile')\n\n\tconst handleRename = async () => {\n\t\tsetProcessingRename(true)\n\t\ttry {\n\t\tconsole.log('rename file attempt', file, user.files[file])\n\t\t\n\t\tconst currentFileValues = user.files[file]\n\t\tconsole.log('FILE VALUES:', currentFileValues)\n\t\tuser.files[newName] = currentFileValues\n\t\tdelete user.files[file]\n\t\tconsole.log('FILES AFTER RENAME:', user.files)\n\n\t\tconst stringToEncrypt = JSON.stringify(user)\n\t\tconst accessControlConditions = user.nft_info\n\n\t\tconst encStringToStore = await encryptUser(stringToEncrypt, accessControlConditions, user)\n\t\tconsole.log('ENCRYPTED STRING TO STORE:', encStringToStore)\n\t\tawait record.merge({dstor_id: encStringToStore})\n\t\tconsole.log('got past record update:', record)\n\t\tsetEditingName(null)\n\t\tsetShowOptions(null)\n\t\tsetProcessingRename(false)\n\t\t} catch (error) {\n\t\t\tconsole.log('error from rename file attempt:', error.message)\n\t\t\twindow.alert('Error renaming file. Please try again.')\n\t\t\tsetProcessingRename(false)\n\t\t}\n\t}\n\n\tconst handleCancel = () => {\n\t\tsetEditingName(null)\n\t\tsetShowOptions(null)\n\t}\n\n\n\treturn (\n\t<>\n\t{processingRename ? (\n\t\t<>\n\t\t\t<td className=\"hover:bg-white bg-white\">\n\t\t\t\t{newName}\n\t\t\t\t</td>\n\t\t\t\t<td className=\"hover:bg-white bg-white\">\n\t\t\t\t\t<RotatingSquare color=\"#00BFFF\" height={30} width={100} />\n\t\t\t</td>\n\t\t\t</>\n\t) : (\n\t\t<>\n\t\t<td className=\"hover:bg-white bg-white\">\n\t\t\t<input type=\"text\" style={{ border: '1px solid #ccc' }} value={newName} onChange={(e) => setNewName(e.target.value)} />\n\t\t\t</td>\n\t\t\t<td className=\"hover:bg-white bg-white\">\n\t\t\t<button onClick={handleRename}><FcCheckmark size={30}/></button>\n\t\t\t<button onClick={handleCancel}><FcCancel size ={30}/></button>\n\t\t</td>\n\t\t</>\n\t)}\n\t</>\n\t)\n}\n\nexport default RenameFile",
      "SearchBar.js": "import React, {useRef, useState, useEffect} from 'react';\nimport folderIcon from '../assets/folder.png';\nimport { AiFillFileText } from \"react-icons/ai\";\n\nfunction SearchBar({filesRef, foldersRef, currentFolderRef, setSearchResults}) {\n\tconst [search, setSearch] = useState('')\n\tconst [results, setResults] = useState([])\n\tconst [isSearching, setIsSearching] = useState(false)\n\tconst [imageIcon, setImageIcon] = useState(<img style={{width: '15px', height: '15px', marginRight: '10px'}} src={folderIcon} alt=\"folder\" />)\n\n\tconst searchRef = useRef()\n\n\tconst handleSearch = (e) => {\n\t\tconsole.log(e.target.value)\n\t\tsetSearch(e.target.value.toLowerCase())\n\t}\n\n\tconst handleSearchClick = async (e) => {\n\t\t//e.preventDefault()\n\t\tconst fileResult = e.target.innerText\n\t\tconst folderResult = '/' + e.target.innerText\n\t\tconsole.log('search clicked', search, folderResult)\n\t\tfor (let folder of foldersRef.current) {\n\t\tif (folder.includes(fileResult)) {\n\t\t\tcurrentFolderRef.current = await folder\n\t\t\tsetSearchResults(fileResult)\n\t\t\tsetImageIcon(<img style={{width: '15px', height: '15px', marginRight: '10px'}} src={folderIcon} alt=\"folder\" />)\n\t\t}\n\t}\n\t\tif (filesRef.current[fileResult]) {\n\t\t\tconsole.log('file clicked:', filesRef.current[fileResult])\n\t\t\tcurrentFolderRef.current = await filesRef.current[fileResult][2]\n\t\t\tsetSearchResults(fileResult)\n\t\t\tsetImageIcon(<AiFillFileText size={20}/>)\n\t\t}\n\t\tconsole.log('current folder after click in search:', currentFolderRef.current)\n\t\tsetSearch('')\n\t\tsearchRef.current.value = ''\n\t}\n\n\tuseEffect(() => {\n\t\tif (search.length > 0) {\n\t\t\tsetIsSearching(true)\n\t\t} else {\n\t\t\tsetIsSearching(false)\n\t\t\tsetResults([])\n\t\t}\n\t}, [search])\n\n\tuseEffect(() => {\n\t\tconst results = []\n\t\tconsole.log('searching...', search, results, isSearching)\n\t\t\n\t\tif (isSearching) {\n\t\t\t\n\t\t\tfor (let file of Object.keys(filesRef.current)) {\n\t\t\t\tif (file.toLowerCase().includes(search)) {\n\t\t\t\t\tconst icon = <AiFillFileText style={{marginRight: '5px'}} size={20} />\n\t\t\t\t\tresults.push({item: file, icon: icon})\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let folder of foldersRef.current) {\n\t\t\t\t\tconst foldersArray = folder.split('/')\n\t\t\t\t\tconst lastFolder = foldersArray[foldersArray.length - 1]\n\t\t\t\tif (lastFolder.toLowerCase().includes(search)) {\n\t\t\t\t\tconst icon = <img style={{width: '15px', height: '15px', marginRight: '10px'}} src={folderIcon} alt=\"folder\" />\n\t\t\t\t\tresults.push({item: lastFolder, icon: icon})\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetResults(results)\n\t\t} \n\t}, [isSearching, search, filesRef])\n\n\treturn (\n\t\t<div>\n\t\t\t<p className=\"font-poppins font-semibold xs:text-[35px] text-black xs:leading-[76.8px] leading-[66.8px] w-full\" style={{fontSize: '30px'}}>Search</p>\n\t\t\t<input style={{ border: '1px solid #ccc' }} ref={searchRef} onChange={handleSearch} type=\"text\" placeholder=\"Search\" />\n\t\t\t{isSearching && (\n\t\t\t<div syle={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n\t\t\t\t{results.map(result => (\n\t\t\t\t\t<div key={result.item} style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<button className=\"hover:bg-gray-300 rounded-md\" onClick={handleSearchClick}>\n\t\t\t\t\t\t\t\t<div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center'}}>\n\t\t\t\t\t\t\t\t\t{result.icon}\n\t\t\t\t\t\t\t\t\t{result.item}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default SearchBar",
      "Sidebar.js": "import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { RiHomeFill } from 'react-icons/ri';\nimport { IoIosArrowForward } from 'react-icons/io';\nimport logo from '../assets/logo.png';\nimport Upload from './Upload'\n//import { categories } from '../utils/data';\n\nconst isNotActiveStyle = 'flex items-center px-5 gap-3 text-gray-500 hover:text-black transition-all duration-200 ease-in-out capitalize';\nconst isActiveStyle = 'flex items-center px-5 gap-3 font-extrabold border-r-2 border-black  transition-all duration-200 ease-in-out capitalize';\n\nconst Sidebar = ({bucket_id, user_obj, setUser}) => {\n  // const handleCloseSidebar = () => {\n  //   if (closeToggle) closeToggle(false);\n  // };\n\n  return (\n    <div className=\"flex flex-col justify-between bg-primary h-full overflow-y-scroll min-w-210 hide-scrollbar\">\n      <div className=\"flex flex-col\">\n        <div className=\"flex flex-col gap-5 text-white\">\n\n\t\t\t\t<Upload bucket_id={bucket_id} user_obj={user_obj} setUser={setUser}/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;",
      "Storage.js": "import React from \"react\";\nimport {useState, useEffect, useRef} from 'react';\nimport { useViewerConnection, EthereumAuthProvider } from \"@self.id/framework\";\nimport LitJsSdk from \"@lit-protocol/sdk-browser\";\nimport Record from './Record'\nimport Files from './Files'\nimport Upload from './Upload'\nimport SearchBar from './SearchBar'\nimport styles from '../style'\nimport AppNavbar from '../style_components/AppNavbar'\n//import Sidebar from './Sidebar'\n\n\nconst Storage = (props) => {\n  const [connection, connect, disconnect] = useViewerConnection();\n  const [string, setString] = useState();\n  const [user, setUser ] = useState(null);\n  const [searchResults, setSearchResults] = useState(null);\n  //const [uploading, setUploading] = useState(false)\n  const bucket_idRef = useRef();\n  const user_objRef = useRef();\n  const filesRef = useRef();\n  const foldersRef = useRef();\n  const currentFolderRef = useRef('/');\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  console.log('STORAGE COMPONENT RENDERED. USER:', user)\n  const client = new LitJsSdk.LitNodeClient();\n  client.connect();\n  window.litNodeClient = client;\n\n  // Decrypting string using state var\n  const decrypt = async (stringToDecrypt) => {\n    console.log('ATTEMPTING DECRYPT IN STORAGE')\n    if (!client.litNodeClient) {\n      await client.connect()\n    } \n    const db_user = await JSON.parse(sessionStorage.getItem('db_user'))\n    console.log('GOT DB USER IN STORAGE:', db_user)\n    const accessControlConditions = [db_user.nft_info]\n    const authSig = await props.authSig\n    console.log('user object from record:', stringToDecrypt)\n    // convert base64 string to blob\n    const encryptedString = LitJsSdk.base64StringToBlob(stringToDecrypt)\n    const chain = 'polygon'\n    const encryptedSymmetricKey = db_user.encrypted_key\n    console.log('stuff needed to get symmetric key:', accessControlConditions, encryptedSymmetricKey, chain, authSig)\n    const symmetricKey = await window.litNodeClient.getEncryptionKey({\n      accessControlConditions,\n      toDecrypt: encryptedSymmetricKey,\n      chain,\n      authSig,\n    });\n    console.log(\"GOT SYMMKEY:\", symmetricKey)\n    try {\n      console.log('attempted final string decrypt', encryptedString, symmetricKey)\n    const decryptedString = await LitJsSdk.decryptString(\n      encryptedString,\n      symmetricKey\n    );\n    console.log('SUCCESSFULLY DECRYPTED USER STRING:', JSON.parse(decryptedString))\n    setString(decryptedString)\n     \n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleDisconnect = async () => {\n    disconnect();\n    window.localStorage.removeItem(\"lit-auth-signature\")\n    window.location.assign('/login')\n  }\n\n  if (user) {\n    decrypt(user);\n  } \n  if (string){\n    const user_obj_json = JSON.parse(string)\n    const bucket = user_obj_json.bucket_id\n    const folders = user_obj_json.folders\n    const files = user_obj_json.files\n    console.log('Dstor user OBJECT IN STORAGE:', user_obj_json)\n    bucket_idRef.current = bucket\n    user_objRef.current = user_obj_json\n    filesRef.current = files\n    foldersRef.current = folders\n  }\n\n  useEffect(() => {\n    // make sure there is a connection to ceramic, if not, reconnect using address from stored authSig\n    if (connection.status === 'idle') {\n      const reconnect = async () => {\n        const authsig = JSON.parse(localStorage.getItem('lit-auth-signature'))\n        await connect(new EthereumAuthProvider(window.ethereum, authsig.address))\n      }\n      reconnect();\n    }\n    return\n  },[connect, connection.status])\n\n  if (bucket_idRef.current){\n    return (\n      <div>\n\n        <div className=\"bg-primary w-full overflow-hidden\">\n          <div className={`${styles.paddingX} ${styles.flexCenter}`}>\n            <div className={`${styles.boxWidth}`}>\n              <AppNavbar handleDisconnect={handleDisconnect} />\n            </div>\n          </div>\n        </div>\n\n          <div className={`flex-1 ${styles.flexStart} flex-col sm:px-16`}>\n          <div className=\"flex flex-col justify-between items-left w-full\">\n            <SearchBar setSearchResults={setSearchResults} filesRef={filesRef} foldersRef={foldersRef} currentFolderRef={currentFolderRef}/>\n            <Upload modalIsOpen={modalIsOpen} setModalIsOpen={setModalIsOpen} bucket_id={bucket_idRef.current} user_obj={user_objRef.current} setUser={setUser} currentFolderRef={currentFolderRef} foldersRef={foldersRef}/>\n            <br></br>\n            <Files user={user_objRef.current} modalIsOpen={modalIsOpen} bucket_id={bucket_idRef.current} filesRef={filesRef} foldersRef={foldersRef} currentFolderRef={currentFolderRef}/>\n          </div>\n          </div>\n    </div>\n\n    )\n  }\n  return (\n    <div>\n      <div>\n        <Record setUser={setUser}/>\n      </div>\n    </div>\n  );\n};\n\nexport default Storage;",
      "Upload.js": "import React, { useState, useEffect, useRef } from 'react';\nimport LitJsSdk from \"@lit-protocol/sdk-browser\";\nimport {encryptUser} from './EncryptUser';\nimport { useViewerRecord } from \"@self.id/framework\";\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport {InfinitySpin} from 'react-loader-spinner';\n\n// take file input from user\n// encrypt file with lit\n// call server to proxy upload call to chainsafe api\n// add file list to ceramic user files array\n\nfunction Upload({bucket_id, user_obj, setUser, currentFolderRef, foldersRef, modalIsOpen, setModalIsOpen }) {\n\tconst [file, setFile] = useState(null)\n\tconst [uploading, setUploading] = useState(false)\n\tconst [loading, setLoading] = useState(0)\n\tconst [creatingNewFolder, setCreatingNewFolder] = useState(false)\n\tconst inputRef = useRef(null)\n\tconst newFolderRef = useRef(null)\n\tconst record = useViewerRecord('basicProfile')\n\t\n\tconsole.log('UPLOAD COMPONENT RENDERED. USER:', user_obj, bucket_id, currentFolderRef.current)\n\n\tconst encryptFile = async (file) => {\n\t\tconst client = await new LitJsSdk.LitNodeClient();\n\t\tclient.connect();\n\t\twindow.litNodeClient = client;\n    if (!client.litNodeClient) {\n      await client.connect()\n    } \n\t\tconsole.log('FILE NAME FROM UPLOAD:', file.name)\n\t\tconst currentFolder = currentFolderRef.current\n\t\tconst user = user_obj\n\t\tconst accessControlConditions = user.nft_info\n    const chain = 'polygon'  \n\n\t\tconsole.log('UPLOAD COMPONENT RENDERED. USER:', user, bucket_id, currentFolderRef.current)\n\n\t\tconst file_name = file.name\n\t\tconsole.log('FILES FROM Dstor USER:', user, user.files)\n    const authSig = await JSON.parse(window.localStorage.getItem(\"lit-auth-signature\"))\n    // encryptedFile gets sent to server to upload via chainsafe\n\t\tconsole.log('FILE FROM ENCRYPT FILE:', file)\n    const { encryptedFile, symmetricKey } = await LitJsSdk.encryptFile({file: file });\n\t\t// encryptedSymmetricKey and file name get added as key-value pair to db_user files object\n    const encryptedSymmetricKey = await window.litNodeClient.saveEncryptionKey({\n      accessControlConditions,\n      symmetricKey,\n      authSig,\n      chain,\n    });\n\t\tconsole.log('ENCRYPTED FILE!!!:', encryptedFile)\n\t\tconst keyToStore = LitJsSdk.uint8arrayToString(encryptedSymmetricKey, \"base16\")\n\n\t\tuser.files[file_name] = [keyToStore];\n\n\t\tconsole.log('DB USER AFTER UPLOAD:', user)\n\n\n\t\tconst formData = new FormData()\n\t\tformData.append('file', encryptedFile)\n\t\tformData.append('bucket_id', bucket_id)\n\t\tformData.append('file_name', file.name)\n\t\tformData.append('folder', currentFolder)\n\n\t\ttry {\n\t\t\tconst response =  await axios({\n\t\t\tmethod: 'post',\n\t\t\turl: '/upload',\n\t\t\tdata: formData,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'multipart/form-data'\n\t\t\t},\n\t\t\tonUploadProgress: (event) => {\n\t\t\t\t//console.log('BROWSER PROGRESS TEST:', event)\n\t\t\t\tconst percentageRaw = (event.progress * 100)\n\t\t\t\tconst percentage = percentageRaw.toFixed(2)\n\t\t\t\tsetLoading(percentage)\n\t\t\t}\n\t\t}, { timeout: -1});\n\n\t\tconsole.log('REPSONSE FROM UPLOAD:', response)\n\t\tconst responseString = response.data\n\n\t\t//Below get's the filestream upload name from the response string, \n\t\t//added to the array of objects which maps to the key which is the actual file name entered by user\n\n\t\tconst upload_name = responseString.replace('uploads/', '')\n\t\tuser.files[file_name].push(upload_name)\n\t\tuser.files[file_name].push(currentFolder)\n\t\tconst stringToEncrypt = JSON.stringify(user)\n\t\tconst encStringToStore = await encryptUser(stringToEncrypt, accessControlConditions, user)\n\t\t//inputRef.current.value = null\n\t\tsetUploading(false)\n\t\treturn encStringToStore\n\t\t} catch (error) {\n\t\t\tconsole.log('encrypt file threw error:', error.message)\n\t\t\tthrow error\n\t\t}\n\t}\n\n\tconst newFolder = async (e) => {\n\t\te.preventDefault()\n\t\tconst newFolderName = newFolderRef.current.value\n\t\tsetCreatingNewFolder(true)\n\t\tconsole.log('new folder func called', newFolderRef.current)\n\t\tconst user = user_obj\n\t\tconst accessControlConditions = user.nft_info\n\t\tconst getPath = async () => {\n\t\t\tif (currentFolderRef.current === '/') {\n\t\t\t\treturn currentFolderRef.current + newFolderName\n\t\t\t} else {\n\t\t\t\treturn currentFolderRef.current + '/' + newFolderName\n\t\t\t}\n\t\t} \n\n\t\tconst path = await getPath()\n\t\tconsole.log('data in new folder func', newFolderName, path, bucket_id)\n\t\tconst body = {\n\t\t\tpath: path,\n\t\t\tbucket_id: bucket_id\n\t\t}\n\t\tconsole.log('body in new folder func', body)\n\t\ttry {\n\t\tconst response = await axios({\n\t\t\tmethod: 'POST',\n\t\t\turl: '/new_folder',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tdata: body,\n\t\t})\n\t\tconsole.log('new folder response:', response)\n\n\t\tuser.folders.push(path)\n\t\tconst stringToEncrypt = JSON.stringify(user)\n\t\tconst encStringToStore = await encryptUser(stringToEncrypt, accessControlConditions, user)\n\t\tawait record.merge({dstor_id: encStringToStore})\n\t\tconsole.log('new folder response:', response)\n\t\tfoldersRef.current.push(path)\n\t\tsetCreatingNewFolder(false)\n\t\tsetModalIsOpen(false)\n\t\t} catch (error) {\n\t\t\tconsole.log('error from new folder attempt:', error.message)\n\t\t}\n\t}\n\n\tconst handleChange = async (e) => {\n\t\tsetFile(e.target.files[0])\n\t}\n\n\tconst handleSubmit = async (e) => {\n\t\t//enforce file size limit\n\t\t//encrypt file + update user object\n\t\t//send to server to upload via chainsafe\n\t\tif(file.size > 50000000){\n\t\t\tinputRef.current.value = null\n\t\t\twindow.alert('Oops! File is too large. Please limit uploads to 50mb for now.')\n\t\t\treturn\n\t\t}\n\t\ttry {\n\t\tsetUploading(true)\n\t\tconst encStringToStore = await encryptFile(file)\n\t\tawait record.merge({dstor_id: encStringToStore})\n\t\twindow.alert('Upload Successful!')\n\t\tsetFile(null)\n\t\tsetLoading(0)\n\t\t} catch (error) {\n\t\t\tconsole.log('error from upload attempt:', error.message)\n\t\t\tsetUploading(false)\n\t\t\t//inputRef.current.value = null\n\t\t\twindow.alert('Oops! Something went wrong. Please try again.')\n\t\t}\n\t}\n\tconst customStyles = {\n\t\tcontent: {\n\t\t\ttop: '50%',\n\t\t\tleft: '50%',\n\t\t\tright: 'auto',\n\t\t\tbottom: 'auto',\n\t\t\tmarginRight: '-50%',\n\t\t\ttransform: 'translate(-50%, -50%)',\n\t\t\tmaxWidth: '400px', // set max width of the modal\n\t\t\tmaxHeight: '80vh', // set max height of the modal\n\t\t},\n\t};\n\t\n\n\tuseEffect(() => {\n\t\tif (!record.isLoading && record.content && !record.isMutating && record.content.dstor_id && !uploading) {\n\t\t\tconsole.log(\"In upload useeffect\")\n\t\t\tsetUser(record.content.dstor_id)\n\t\t}\n\t\n\t\treturn \n\t},[record.isLoading, record.content, record, uploading, file])\n\n\tuseEffect(() => {\n\t\tif (file) {\n\t\t\thandleSubmit()\n\t\t}\n\t}, [file])\n\n\n\n\tif (uploading) {\n\t\treturn(\n\t\t<>\n\t\t<h2 className=\"font-poppins font-semibold xs:text-[35px] text-[10px] text-black xs:leading-[76.8px] leading-[66.8px] mt-10\">Upload New File</h2>\n\t\t<div className=\"flex items-center\">\n\t\t\t<input disabled={true} type=\"file\" className=\" text-sm text-slate-500\n\t\t\t\tfile:mr-4 file:py-2 file:px-4\n\t\t\t\tfile:rounded-full file:border-0\n\t\t\t\tfile:text-sm file:font-semibold\n\t\t\t\tfile:bg-sky-50 file:text-sky-500\n\t\t\t\"/>\n\t\t\t<p className=\"align-text-bottom\">Uploading...</p>\n\t\t\t<div className=\"text-black\">\n\t\t\t\t<div className=\"pt-4\">\n\t\t\t\t\t<div className=\"overflow-hidden h-2 mb-4 text-xs text-center flex rounded bg-sky-200 h-[16px] w-[200px]\">\n\t\t\t\t\t\t<div style={{width: (loading * 2)}} className=\"shadow-none text-center whitespace-nowrap text-white justify-between bg-sky-500 h-[100px]\"><p className=\"text-slate-800\">{loading}% Completed</p></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>  \n\t\t\t</div>\n\t\t</div>\n\t</>\n\n\t\t)\n\t}\n\treturn (\n\t<div className=\"mt-10\">\n\t\t<p className=\"font-poppins font-semibold xs:text-[35px] text-black xs:leading-[76.8px] leading-[66.8px] w-full\" style={{fontSize: '30px'}}>Upload New File</p>\n\t\t<input ref={inputRef} type=\"file\" className=\" text-sm text-slate-500\n\t\t\tfile:mr-4 file:py-2 file:px-4\n\t\t\tfile:rounded-full file:border-0\n\t\t\tfile:text-sm file:font-semibold\n\t\t\tfile:bg-sky-50 file:text-sky-500\n\t\t\thover:file:bg-violet-100\n\t\t\"\n\t\ttitle=\"Upload a file\"\n\t\tonChange={handleChange}/>\n\t\t<div >\n\t\t\t<button className=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium hover:bg-teal-700 mt-10\" onClick={() => setModalIsOpen(true)}>Add Folder</button>\n\t\t\t<div>\n\t\t\t\t<Modal isOpen={modalIsOpen} style={customStyles}>\n\t\t\t\t\t<div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', marginTop: '10px', marginBottom: '10px'}}>\n\t\t\t\t\t\t{creatingNewFolder ? (\n\t\t\t\t\t\t\t<div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center'}}>\n\t\t\t\t\t\t\t\t<p>Creating New Folder...</p>\n\t\t\t\t\t\t\t\t<div style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n\t\t\t\t\t\t\t\t<InfinitySpin\n\t\t\t\t\t\t\t\t\tcolor=\"#00BFFF\"\n\t\t\t\t\t\t\t\t\theight={100}\n\t\t\t\t\t\t\t\t\twidth={150}\n\t\t\t\t\t\t\t\t\ttimeout={3000} //3 secs\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<form onSubmit={newFolder}>\n\t\t\t\t\t\t\t\t<div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center'}}>\n\t\t\t\t\t\t\t\t\t<label>New Folder Name:</label>\n\t\t\t\t\t\t\t\t\t<input ref={newFolderRef} style={{ border: '1px solid #ccc' }} type=\"text\" />\n\t\t\t\t\t\t\t\t\t<button style={{ marginTop: '10px' }} className=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium hover:bg-teal-700\" type=\"submit\">Submit</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<div style={{marginTop: '20px'}}>\n\t\t\t\t\t\t\t<button className=\"bg-gray-500 text-white px-3 py-2 rounded-md text-sm font-medium hover:bg-red-300\" onClick={() => setModalIsOpen(false)}>Cancel</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\n\n\t\t\t\t\t</div>\n\t\t\t\t</Modal>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t)\n}\n\nexport default Upload"
    },
    "index.css": "@import url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700;800;900&display=swap\");\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --black-gradient: linear-gradient(\n    144.39deg,\n    #ffffff -278.56%,\n    #6d6d6d -78.47%,\n    #11101d 91.61%\n  );\n  --card-shadow: 0px 20px 100px -10px rgba(66, 71, 91, 0.1);\n}\n\n* {\n  scroll-behavior: smooth;\n}\n\n.text-gradient {\n  background: radial-gradient(\n    64.18% 64.18% at 71.16% 35.69%,\n    #def9fa 0.89%,\n    #bef3f5 17.23%,\n    #9dedf0 42.04%,\n    #7de7eb 55.12%,\n    #5ce1e6 71.54%,\n    #33bbcf 100%\n  );\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  text-fill-color: transparent;\n}\n\n.linear-gradient {\n  background: linear-gradient(\n    90deg,\n    #def9fa 0.89%,\n    #bef3f5 17.23%,\n    #9dedf0 42.04%,\n    #7de7eb 55.12%,\n    #5ce1e6 71.54%,\n    #33bbcf 100%\n  );\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  text-fill-color: transparent;\n}\n\n.bg-blue-gradient {\n  background: linear-gradient(\n    157.81deg,\n    #def9fa -43.27%,\n    #bef3f5 -21.24%,\n    #9dedf0 12.19%,\n    #7de7eb 29.82%,\n    #5ce1e6 51.94%,\n    #33bbcf 90.29%\n  );\n}\n\n.bg-black-gradient {\n  background: linear-gradient(\n    144.39deg,\n    #ffffff -278.56%,\n    #6d6d6d -78.47%,\n    #11101d 91.61%\n  );\n}\n\n.bg-black-gradient-2 {\n  background: linear-gradient(\n    -168.39deg,\n    #ffffff -278.56%,\n    #6d6d6d -78.47%,\n    #11101d 91.61%\n  );\n}\n\n.bg-gray-gradient {\n  background: linear-gradient(\n    153.47deg,\n    rgba(255, 255, 255, 0) -341.94%,\n    #14101d 95.11%\n  );\n}\n\n.bg-discount-gradient {\n  background: linear-gradient(125.17deg, #272727 0%, #11101d 100%);\n}\n\n.box-shadow {\n  box-shadow: 0px 20px 100px -10px rgba(66, 71, 91, 0.1);\n}\n\n.sidebar {\n  -webkit-animation: slide-top 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n  animation: slide-top 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n}\n\n@-webkit-keyframes slide-top {\n  0% {\n    -webkit-transform: translateY(100px);\n    transform: translateY(100px);\n  }\n  100% {\n    -webkit-transform: translateY(0);\n    transform: translateY(0);\n  }\n}\n\n@keyframes slide-top {\n  0% {\n    -webkit-transform: translateY(100px);\n    transform: translateY(100px);\n  }\n  100% {\n    -webkit-transform: translateY(0);\n    transform: translateY(0);\n  }\n}\n\n.feature-card:hover {\n  background: var(--black-gradient);\n  box-shadow: var(--card-shadow);\n}\n\n.feedback-container .feedback-card:last-child {\n  margin-right: 0px;\n}\n\n.feedback-card {\n  background: transparent;\n}\n\n.feedback-card:hover {\n  background: var(--black-gradient);\n}\n\n.blue__gradient {\n  background: linear-gradient(180deg, rgba(188, 165, 255, 0) 0%, #214d76 100%);\n  filter: blur(123px);\n}\n\n.pink__gradient {\n  background: linear-gradient(90deg, #f4c4f3 0%, #fc67fa 100%);\n  filter: blur(900px);\n}\n\n.white__gradient {\n  background: rgba(255, 255, 255, 0.6);\n  filter: blur(750px);\n}",
    "index.js": "import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n",
    "mintAccessNft.json": {
      "_format": "hh-sol-artifact-1",
      "contractName": "MintAccessNft",
      "sourceName": "contracts/MintNFT.sol",
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "NewItemId",
              "type": "uint256"
            }
          ],
          "name": "NFTMinted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getMyTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "mintToken",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "tokenAddress",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "tokenExists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405260016007553480156200001657600080fd5b506040518060400160405280600b81526020017f6453746f724163636573730000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4453410000000000000000000000000000000000000000000000000000000000815250816000908162000094919062000329565b508060019081620000a6919062000329565b50505062000410565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200013157607f821691505b602082108103620001475762000146620000e9565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001b17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000172565b620001bd868362000172565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200020a62000204620001fe84620001d5565b620001df565b620001d5565b9050919050565b6000819050919050565b6200022683620001e9565b6200023e620002358262000211565b8484546200017f565b825550505050565b600090565b6200025562000246565b620002628184846200021b565b505050565b5b818110156200028a576200027e6000826200024b565b60018101905062000268565b5050565b601f821115620002d957620002a3816200014d565b620002ae8462000162565b81016020851015620002be578190505b620002d6620002cd8562000162565b83018262000267565b50505b505050565b600082821c905092915050565b6000620002fe60001984600802620002de565b1980831691505092915050565b6000620003198383620002eb565b9150826002028217905092915050565b6200033482620000af565b67ffffffffffffffff81111562000350576200034f620000ba565b5b6200035c825462000118565b620003698282856200028e565b600060209050601f831160018114620003a157600084156200038c578287015190505b6200039885826200030b565b86555062000408565b601f198416620003b1866200014d565b60005b82811015620003db57848901518255600182019150602085019450602081019050620003b4565b86831015620003fb5784890151620003f7601f891682620002eb565b8355505b6001600288020188555050505b505050505050565b61283a80620004206000396000f3fe608060405234801561001057600080fd5b506004361061010a5760003560e01c80635b3b136a116100a25780639884e801116100715780639884e801146102b7578063a22cb465146102e7578063b88d4fde14610303578063c87b56dd1461031f578063e985e9c51461034f5761010a565b80635b3b136a1461021b5780636352211e1461023957806370a082311461026957806395d89b41146102995761010a565b8063095ea7b3116100de578063095ea7b3146101bd5780632004ffd9146101d957806323b872dd146101e357806342842e0e146101ff5761010a565b8062923f9e1461010f57806301ffc9a71461013f57806306fdde031461016f578063081812fc1461018d575b600080fd5b61012960048036038101906101249190611938565b61037f565b6040516101369190611980565b60405180910390f35b610159600480360381019061015491906119f3565b61039f565b6040516101669190611980565b60405180910390f35b610177610481565b6040516101849190611ab0565b60405180910390f35b6101a760048036038101906101a29190611938565b610513565b6040516101b49190611b13565b60405180910390f35b6101d760048036038101906101d29190611b5a565b610559565b005b6101e1610670565b005b6101fd60048036038101906101f89190611b9a565b61076d565b005b61021960048036038101906102149190611b9a565b6107cd565b005b6102236107ed565b6040516102309190611bfc565b60405180910390f35b610253600480360381019061024e9190611938565b610834565b6040516102609190611b13565b60405180910390f35b610283600480360381019061027e9190611c17565b6108e5565b6040516102909190611bfc565b60405180910390f35b6102a161099c565b6040516102ae9190611ab0565b60405180910390f35b6102d160048036038101906102cc9190611c17565b610a2e565b6040516102de9190611bfc565b60405180910390f35b61030160048036038101906102fc9190611c70565b610a46565b005b61031d60048036038101906103189190611de5565b610a5c565b005b61033960048036038101906103349190611938565b610abe565b6040516103469190611ab0565b60405180910390f35b61036960048036038101906103649190611e68565b610bd0565b6040516103769190611980565b60405180910390f35b60096020528060005260406000206000915054906101000a900460ff1681565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061046a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061047a575061047982610c64565b5b9050919050565b60606000805461049090611ed7565b80601f01602080910402602001604051908101604052809291908181526020018280546104bc90611ed7565b80156105095780601f106104de57610100808354040283529160200191610509565b820191906000526020600020905b8154815290600101906020018083116104ec57829003601f168201915b5050505050905090565b600061051e82610cce565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061056482610834565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cb90611f7a565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105f3610d19565b73ffffffffffffffffffffffffffffffffffffffff16148061062257506106218161061c610d19565b610bd0565b5b610661576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106589061200c565b60405180910390fd5b61066b8383610d21565b505050565b60096000600754815260200190815260200160002060009054906101000a900460ff16156106d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ca90612078565b60405180910390fd5b6106df33600754610dda565b600754600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160096000600754815260200190815260200160002060006101000a81548160ff02191690831515021790555060076000815480929190610766906120c7565b9190505550565b61077e610778610d19565b82610df8565b6107bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b490612181565b60405180910390fd5b6107c8838383610e8d565b505050565b6107e883838360405180602001604052806000815250610a5c565b505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d3906121ed565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610955576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094c9061227f565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546109ab90611ed7565b80601f01602080910402602001604051908101604052809291908181526020018280546109d790611ed7565b8015610a245780601f106109f957610100808354040283529160200191610a24565b820191906000526020600020905b815481529060010190602001808311610a0757829003601f168201915b5050505050905090565b60086020528060005260406000206000915090505481565b610a58610a51610d19565b83836110f3565b5050565b610a6d610a67610d19565b83610df8565b610aac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa390612181565b60405180910390fd5b610ab88484848461125f565b50505050565b6060610ac982610cce565b6000600660008481526020019081526020016000208054610ae990611ed7565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1590611ed7565b8015610b625780601f10610b3757610100808354040283529160200191610b62565b820191906000526020600020905b815481529060010190602001808311610b4557829003601f168201915b505050505090506000610b736112bb565b90506000815103610b88578192505050610bcb565b600082511115610bbd578082604051602001610ba59291906122db565b60405160208183030381529060405292505050610bcb565b610bc6846112d2565b925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610cd78161133a565b610d16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0d906121ed565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610d9483610834565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b610df48282604051806020016040528060008152506113a6565b5050565b600080610e0483610834565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610e465750610e458185610bd0565b5b80610e8457508373ffffffffffffffffffffffffffffffffffffffff16610e6c84610513565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ead82610834565b73ffffffffffffffffffffffffffffffffffffffff1614610f03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efa90612371565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6990612403565b60405180910390fd5b610f7d838383611401565b610f88600082610d21565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fd89190612423565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461102f9190612457565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46110ee838383611406565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611161576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611158906124d7565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516112529190611980565b60405180910390a3505050565b61126a848484610e8d565b6112768484848461140b565b6112b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ac90612569565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606112dd82610cce565b60006112e76112bb565b905060008151116113075760405180602001604052806000815250611332565b8061131184611592565b6040516020016113229291906122db565b6040516020818303038152906040525b915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b6113b083836116f2565b6113bd600084848461140b565b6113fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f390612569565b60405180910390fd5b505050565b505050565b505050565b600061142c8473ffffffffffffffffffffffffffffffffffffffff166118cb565b15611585578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611455610d19565b8786866040518563ffffffff1660e01b815260040161147794939291906125de565b6020604051808303816000875af19250505080156114b357506040513d601f19601f820116820180604052508101906114b0919061263f565b60015b611535573d80600081146114e3576040519150601f19603f3d011682016040523d82523d6000602084013e6114e8565b606091505b50600081510361152d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152490612569565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061158a565b600190505b949350505050565b6060600082036115d9576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506116ed565b600082905060005b6000821461160b5780806115f4906120c7565b915050600a82611604919061269b565b91506115e1565b60008167ffffffffffffffff81111561162757611626611cba565b5b6040519080825280601f01601f1916602001820160405280156116595781602001600182028036833780820191505090505b5090505b600085146116e6576001826116729190612423565b9150600a8561168191906126cc565b603061168d9190612457565b60f81b8183815181106116a3576116a26126fd565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856116df919061269b565b945061165d565b8093505050505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611761576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161175890612778565b60405180910390fd5b61176a8161133a565b156117aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a1906127e4565b60405180910390fd5b6117b660008383611401565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118069190612457565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46118c760008383611406565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61191581611902565b811461192057600080fd5b50565b6000813590506119328161190c565b92915050565b60006020828403121561194e5761194d6118f8565b5b600061195c84828501611923565b91505092915050565b60008115159050919050565b61197a81611965565b82525050565b60006020820190506119956000830184611971565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119d08161199b565b81146119db57600080fd5b50565b6000813590506119ed816119c7565b92915050565b600060208284031215611a0957611a086118f8565b5b6000611a17848285016119de565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611a5a578082015181840152602081019050611a3f565b60008484015250505050565b6000601f19601f8301169050919050565b6000611a8282611a20565b611a8c8185611a2b565b9350611a9c818560208601611a3c565b611aa581611a66565b840191505092915050565b60006020820190508181036000830152611aca8184611a77565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611afd82611ad2565b9050919050565b611b0d81611af2565b82525050565b6000602082019050611b286000830184611b04565b92915050565b611b3781611af2565b8114611b4257600080fd5b50565b600081359050611b5481611b2e565b92915050565b60008060408385031215611b7157611b706118f8565b5b6000611b7f85828601611b45565b9250506020611b9085828601611923565b9150509250929050565b600080600060608486031215611bb357611bb26118f8565b5b6000611bc186828701611b45565b9350506020611bd286828701611b45565b9250506040611be386828701611923565b9150509250925092565b611bf681611902565b82525050565b6000602082019050611c116000830184611bed565b92915050565b600060208284031215611c2d57611c2c6118f8565b5b6000611c3b84828501611b45565b91505092915050565b611c4d81611965565b8114611c5857600080fd5b50565b600081359050611c6a81611c44565b92915050565b60008060408385031215611c8757611c866118f8565b5b6000611c9585828601611b45565b9250506020611ca685828601611c5b565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611cf282611a66565b810181811067ffffffffffffffff82111715611d1157611d10611cba565b5b80604052505050565b6000611d246118ee565b9050611d308282611ce9565b919050565b600067ffffffffffffffff821115611d5057611d4f611cba565b5b611d5982611a66565b9050602081019050919050565b82818337600083830152505050565b6000611d88611d8384611d35565b611d1a565b905082815260208101848484011115611da457611da3611cb5565b5b611daf848285611d66565b509392505050565b600082601f830112611dcc57611dcb611cb0565b5b8135611ddc848260208601611d75565b91505092915050565b60008060008060808587031215611dff57611dfe6118f8565b5b6000611e0d87828801611b45565b9450506020611e1e87828801611b45565b9350506040611e2f87828801611923565b925050606085013567ffffffffffffffff811115611e5057611e4f6118fd565b5b611e5c87828801611db7565b91505092959194509250565b60008060408385031215611e7f57611e7e6118f8565b5b6000611e8d85828601611b45565b9250506020611e9e85828601611b45565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611eef57607f821691505b602082108103611f0257611f01611ea8565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611f64602183611a2b565b9150611f6f82611f08565b604082019050919050565b60006020820190508181036000830152611f9381611f57565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b6000611ff6603e83611a2b565b915061200182611f9a565b604082019050919050565b6000602082019050818103600083015261202581611fe9565b9050919050565b7f746f6b656e20616c726561647920657869737473000000000000000000000000600082015250565b6000612062601483611a2b565b915061206d8261202c565b602082019050919050565b6000602082019050818103600083015261209181612055565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006120d282611902565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361210457612103612098565b5b600182019050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b600061216b602e83611a2b565b91506121768261210f565b604082019050919050565b6000602082019050818103600083015261219a8161215e565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b60006121d7601883611a2b565b91506121e2826121a1565b602082019050919050565b60006020820190508181036000830152612206816121ca565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000612269602983611a2b565b91506122748261220d565b604082019050919050565b600060208201905081810360008301526122988161225c565b9050919050565b600081905092915050565b60006122b582611a20565b6122bf818561229f565b93506122cf818560208601611a3c565b80840191505092915050565b60006122e782856122aa565b91506122f382846122aa565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b600061235b602583611a2b565b9150612366826122ff565b604082019050919050565b6000602082019050818103600083015261238a8161234e565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006123ed602483611a2b565b91506123f882612391565b604082019050919050565b6000602082019050818103600083015261241c816123e0565b9050919050565b600061242e82611902565b915061243983611902565b925082820390508181111561245157612450612098565b5b92915050565b600061246282611902565b915061246d83611902565b925082820190508082111561248557612484612098565b5b92915050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006124c1601983611a2b565b91506124cc8261248b565b602082019050919050565b600060208201905081810360008301526124f0816124b4565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000612553603283611a2b565b915061255e826124f7565b604082019050919050565b6000602082019050818103600083015261258281612546565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006125b082612589565b6125ba8185612594565b93506125ca818560208601611a3c565b6125d381611a66565b840191505092915050565b60006080820190506125f36000830187611b04565b6126006020830186611b04565b61260d6040830185611bed565b818103606083015261261f81846125a5565b905095945050505050565b600081519050612639816119c7565b92915050565b600060208284031215612655576126546118f8565b5b60006126638482850161262a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006126a682611902565b91506126b183611902565b9250826126c1576126c061266c565b5b828204905092915050565b60006126d782611902565b91506126e283611902565b9250826126f2576126f161266c565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000612762602083611a2b565b915061276d8261272c565b602082019050919050565b6000602082019050818103600083015261279181612755565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b60006127ce601c83611a2b565b91506127d982612798565b602082019050919050565b600060208201905081810360008301526127fd816127c1565b905091905056fea26469706673582212200a74a76dd27095e15d2cc79a0fc642ef52b68c9039f1285dcfbb12b6ec7db8d264736f6c63430008110033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010a5760003560e01c80635b3b136a116100a25780639884e801116100715780639884e801146102b7578063a22cb465146102e7578063b88d4fde14610303578063c87b56dd1461031f578063e985e9c51461034f5761010a565b80635b3b136a1461021b5780636352211e1461023957806370a082311461026957806395d89b41146102995761010a565b8063095ea7b3116100de578063095ea7b3146101bd5780632004ffd9146101d957806323b872dd146101e357806342842e0e146101ff5761010a565b8062923f9e1461010f57806301ffc9a71461013f57806306fdde031461016f578063081812fc1461018d575b600080fd5b61012960048036038101906101249190611938565b61037f565b6040516101369190611980565b60405180910390f35b610159600480360381019061015491906119f3565b61039f565b6040516101669190611980565b60405180910390f35b610177610481565b6040516101849190611ab0565b60405180910390f35b6101a760048036038101906101a29190611938565b610513565b6040516101b49190611b13565b60405180910390f35b6101d760048036038101906101d29190611b5a565b610559565b005b6101e1610670565b005b6101fd60048036038101906101f89190611b9a565b61076d565b005b61021960048036038101906102149190611b9a565b6107cd565b005b6102236107ed565b6040516102309190611bfc565b60405180910390f35b610253600480360381019061024e9190611938565b610834565b6040516102609190611b13565b60405180910390f35b610283600480360381019061027e9190611c17565b6108e5565b6040516102909190611bfc565b60405180910390f35b6102a161099c565b6040516102ae9190611ab0565b60405180910390f35b6102d160048036038101906102cc9190611c17565b610a2e565b6040516102de9190611bfc565b60405180910390f35b61030160048036038101906102fc9190611c70565b610a46565b005b61031d60048036038101906103189190611de5565b610a5c565b005b61033960048036038101906103349190611938565b610abe565b6040516103469190611ab0565b60405180910390f35b61036960048036038101906103649190611e68565b610bd0565b6040516103769190611980565b60405180910390f35b60096020528060005260406000206000915054906101000a900460ff1681565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061046a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061047a575061047982610c64565b5b9050919050565b60606000805461049090611ed7565b80601f01602080910402602001604051908101604052809291908181526020018280546104bc90611ed7565b80156105095780601f106104de57610100808354040283529160200191610509565b820191906000526020600020905b8154815290600101906020018083116104ec57829003601f168201915b5050505050905090565b600061051e82610cce565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061056482610834565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cb90611f7a565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105f3610d19565b73ffffffffffffffffffffffffffffffffffffffff16148061062257506106218161061c610d19565b610bd0565b5b610661576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106589061200c565b60405180910390fd5b61066b8383610d21565b505050565b60096000600754815260200190815260200160002060009054906101000a900460ff16156106d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ca90612078565b60405180910390fd5b6106df33600754610dda565b600754600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160096000600754815260200190815260200160002060006101000a81548160ff02191690831515021790555060076000815480929190610766906120c7565b9190505550565b61077e610778610d19565b82610df8565b6107bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b490612181565b60405180910390fd5b6107c8838383610e8d565b505050565b6107e883838360405180602001604052806000815250610a5c565b505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d3906121ed565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610955576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094c9061227f565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546109ab90611ed7565b80601f01602080910402602001604051908101604052809291908181526020018280546109d790611ed7565b8015610a245780601f106109f957610100808354040283529160200191610a24565b820191906000526020600020905b815481529060010190602001808311610a0757829003601f168201915b5050505050905090565b60086020528060005260406000206000915090505481565b610a58610a51610d19565b83836110f3565b5050565b610a6d610a67610d19565b83610df8565b610aac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa390612181565b60405180910390fd5b610ab88484848461125f565b50505050565b6060610ac982610cce565b6000600660008481526020019081526020016000208054610ae990611ed7565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1590611ed7565b8015610b625780601f10610b3757610100808354040283529160200191610b62565b820191906000526020600020905b815481529060010190602001808311610b4557829003601f168201915b505050505090506000610b736112bb565b90506000815103610b88578192505050610bcb565b600082511115610bbd578082604051602001610ba59291906122db565b60405160208183030381529060405292505050610bcb565b610bc6846112d2565b925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610cd78161133a565b610d16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0d906121ed565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610d9483610834565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b610df48282604051806020016040528060008152506113a6565b5050565b600080610e0483610834565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610e465750610e458185610bd0565b5b80610e8457508373ffffffffffffffffffffffffffffffffffffffff16610e6c84610513565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ead82610834565b73ffffffffffffffffffffffffffffffffffffffff1614610f03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efa90612371565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6990612403565b60405180910390fd5b610f7d838383611401565b610f88600082610d21565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fd89190612423565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461102f9190612457565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46110ee838383611406565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611161576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611158906124d7565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516112529190611980565b60405180910390a3505050565b61126a848484610e8d565b6112768484848461140b565b6112b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ac90612569565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606112dd82610cce565b60006112e76112bb565b905060008151116113075760405180602001604052806000815250611332565b8061131184611592565b6040516020016113229291906122db565b6040516020818303038152906040525b915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b6113b083836116f2565b6113bd600084848461140b565b6113fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f390612569565b60405180910390fd5b505050565b505050565b505050565b600061142c8473ffffffffffffffffffffffffffffffffffffffff166118cb565b15611585578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611455610d19565b8786866040518563ffffffff1660e01b815260040161147794939291906125de565b6020604051808303816000875af19250505080156114b357506040513d601f19601f820116820180604052508101906114b0919061263f565b60015b611535573d80600081146114e3576040519150601f19603f3d011682016040523d82523d6000602084013e6114e8565b606091505b50600081510361152d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152490612569565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061158a565b600190505b949350505050565b6060600082036115d9576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506116ed565b600082905060005b6000821461160b5780806115f4906120c7565b915050600a82611604919061269b565b91506115e1565b60008167ffffffffffffffff81111561162757611626611cba565b5b6040519080825280601f01601f1916602001820160405280156116595781602001600182028036833780820191505090505b5090505b600085146116e6576001826116729190612423565b9150600a8561168191906126cc565b603061168d9190612457565b60f81b8183815181106116a3576116a26126fd565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856116df919061269b565b945061165d565b8093505050505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611761576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161175890612778565b60405180910390fd5b61176a8161133a565b156117aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a1906127e4565b60405180910390fd5b6117b660008383611401565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118069190612457565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46118c760008383611406565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61191581611902565b811461192057600080fd5b50565b6000813590506119328161190c565b92915050565b60006020828403121561194e5761194d6118f8565b5b600061195c84828501611923565b91505092915050565b60008115159050919050565b61197a81611965565b82525050565b60006020820190506119956000830184611971565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119d08161199b565b81146119db57600080fd5b50565b6000813590506119ed816119c7565b92915050565b600060208284031215611a0957611a086118f8565b5b6000611a17848285016119de565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611a5a578082015181840152602081019050611a3f565b60008484015250505050565b6000601f19601f8301169050919050565b6000611a8282611a20565b611a8c8185611a2b565b9350611a9c818560208601611a3c565b611aa581611a66565b840191505092915050565b60006020820190508181036000830152611aca8184611a77565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611afd82611ad2565b9050919050565b611b0d81611af2565b82525050565b6000602082019050611b286000830184611b04565b92915050565b611b3781611af2565b8114611b4257600080fd5b50565b600081359050611b5481611b2e565b92915050565b60008060408385031215611b7157611b706118f8565b5b6000611b7f85828601611b45565b9250506020611b9085828601611923565b9150509250929050565b600080600060608486031215611bb357611bb26118f8565b5b6000611bc186828701611b45565b9350506020611bd286828701611b45565b9250506040611be386828701611923565b9150509250925092565b611bf681611902565b82525050565b6000602082019050611c116000830184611bed565b92915050565b600060208284031215611c2d57611c2c6118f8565b5b6000611c3b84828501611b45565b91505092915050565b611c4d81611965565b8114611c5857600080fd5b50565b600081359050611c6a81611c44565b92915050565b60008060408385031215611c8757611c866118f8565b5b6000611c9585828601611b45565b9250506020611ca685828601611c5b565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611cf282611a66565b810181811067ffffffffffffffff82111715611d1157611d10611cba565b5b80604052505050565b6000611d246118ee565b9050611d308282611ce9565b919050565b600067ffffffffffffffff821115611d5057611d4f611cba565b5b611d5982611a66565b9050602081019050919050565b82818337600083830152505050565b6000611d88611d8384611d35565b611d1a565b905082815260208101848484011115611da457611da3611cb5565b5b611daf848285611d66565b509392505050565b600082601f830112611dcc57611dcb611cb0565b5b8135611ddc848260208601611d75565b91505092915050565b60008060008060808587031215611dff57611dfe6118f8565b5b6000611e0d87828801611b45565b9450506020611e1e87828801611b45565b9350506040611e2f87828801611923565b925050606085013567ffffffffffffffff811115611e5057611e4f6118fd565b5b611e5c87828801611db7565b91505092959194509250565b60008060408385031215611e7f57611e7e6118f8565b5b6000611e8d85828601611b45565b9250506020611e9e85828601611b45565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611eef57607f821691505b602082108103611f0257611f01611ea8565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611f64602183611a2b565b9150611f6f82611f08565b604082019050919050565b60006020820190508181036000830152611f9381611f57565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b6000611ff6603e83611a2b565b915061200182611f9a565b604082019050919050565b6000602082019050818103600083015261202581611fe9565b9050919050565b7f746f6b656e20616c726561647920657869737473000000000000000000000000600082015250565b6000612062601483611a2b565b915061206d8261202c565b602082019050919050565b6000602082019050818103600083015261209181612055565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006120d282611902565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361210457612103612098565b5b600182019050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b600061216b602e83611a2b565b91506121768261210f565b604082019050919050565b6000602082019050818103600083015261219a8161215e565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b60006121d7601883611a2b565b91506121e2826121a1565b602082019050919050565b60006020820190508181036000830152612206816121ca565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000612269602983611a2b565b91506122748261220d565b604082019050919050565b600060208201905081810360008301526122988161225c565b9050919050565b600081905092915050565b60006122b582611a20565b6122bf818561229f565b93506122cf818560208601611a3c565b80840191505092915050565b60006122e782856122aa565b91506122f382846122aa565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b600061235b602583611a2b565b9150612366826122ff565b604082019050919050565b6000602082019050818103600083015261238a8161234e565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006123ed602483611a2b565b91506123f882612391565b604082019050919050565b6000602082019050818103600083015261241c816123e0565b9050919050565b600061242e82611902565b915061243983611902565b925082820390508181111561245157612450612098565b5b92915050565b600061246282611902565b915061246d83611902565b925082820190508082111561248557612484612098565b5b92915050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006124c1601983611a2b565b91506124cc8261248b565b602082019050919050565b600060208201905081810360008301526124f0816124b4565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000612553603283611a2b565b915061255e826124f7565b604082019050919050565b6000602082019050818103600083015261258281612546565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006125b082612589565b6125ba8185612594565b93506125ca818560208601611a3c565b6125d381611a66565b840191505092915050565b60006080820190506125f36000830187611b04565b6126006020830186611b04565b61260d6040830185611bed565b818103606083015261261f81846125a5565b905095945050505050565b600081519050612639816119c7565b92915050565b600060208284031215612655576126546118f8565b5b60006126638482850161262a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006126a682611902565b91506126b183611902565b9250826126c1576126c061266c565b5b828204905092915050565b60006126d782611902565b91506126e283611902565b9250826126f2576126f161266c565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000612762602083611a2b565b915061276d8261272c565b602082019050919050565b6000602082019050818103600083015261279181612755565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b60006127ce601c83611a2b565b91506127d982612798565b602082019050919050565b600060208201905081810360008301526127fd816127c1565b905091905056fea26469706673582212200a74a76dd27095e15d2cc79a0fc642ef52b68c9039f1285dcfbb12b6ec7db8d264736f6c63430008110033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "server": {
      "database.sql": "CREATE DATABASE users\n\nCREATE TABLE users\n(\n\tuser_id SERIAL PRIMARY KEY,\n\taddress VARCHAR(255),\n\tbucket_id VARCHAR(255),\n\tencrypted_key VARCHAR(400),\n\tnft_info JSONB NOT NULL DEFAULT '{}'::JSONB\n);",
      "db.js": "const Pool = require('pg').Pool;\n\n\nconst pool = new Pool({\n\tuser: \"keatonkirkpatrick\",\n\thost: \"localhost\",\n\tport: \"5432\",\n\tdatabase: \"users\"\n})\n\n\nmodule.exports = pool; ",
      "index.js": "const express = require(\"express\");\nconst fetch = (...args) =>\n  import('node-fetch').then(({ default: fetch }) => fetch(...args));\nconst path = require('path');\nconst multer = require('multer');\n\nconst upload = multer({dest: \"uploads/\"})\n\nconst FormData = require('form-data')\nconst fs = require('fs');\n\n//prod db\nconst client = require(\"./prod_db\")\n\n//dev db\n//const client = require(\"./db\")\n\nconst cookieParser = require(\"cookie-parser\");\nrequire('dotenv').config();\nconst axios = require('axios')\n\nconst PORT = process.env.PORT || 3001;\nconst app = express();\n\n// Have Node serve the files for our built React app\napp.use(express.static(path.resolve(__dirname, '../../build')));\napp.use(express.json());\napp.use(cookieParser());\napp.use((error, req, res, next) => {\n  if ( error instanceof multer.MulterError) {\n    if (error.code === \"LIMIT_FILE_SIZE\") {\n      return res.json({\n        message: 'File too large: Please limit uploads to 20mb'\n      })\n    }\n  }\n})\n\n// Add user to psql db\napp.post(\"/add_user\", async (req, res) => {\n\n  try{\n    const {address, stream_id, bucket_id, encrypted_key, ceramic_info, nft_info} = req.body;\n    const address_lc = await address.toLowerCase();\n    const newUser = await client.query(\"INSERT INTO users (address, stream_id, bucket_id, encrypted_key, ceramic_info, nft_info) VALUES($1, $2, $3, $4, $5, $6) RETURNING *\", [address_lc, stream_id, bucket_id, encrypted_key, ceramic_info, nft_info]);\n    const user = JSON.stringify(newUser.rows[0]);\n    console.log(\"user added to db and retrieved\")\n    res.send(user)\n  } catch (error) {\n    console.error(error)\n  }\n})\n\n// Connect Wallet, return user if exists or null if no user found\napp.post(\"/connect_wallet\", async (req, res) => {\n  //session = req.session;\n  const authSig = req.body;\n  const address = authSig.address\n  console.log(\"ADDRESS:\", address)\n  const response = await client.query('SELECT * FROM users WHERE address = $1', [address])\n  \n  try {\n    const currentUser = response.rows[0]\n    console.log('user from db:', currentUser)\n    if (!currentUser) {\n      console.log(\"No user found in db\")\n      return res.send({error: \"No user found in db\"})\n    }\n    return res.send(currentUser)\n  } catch (error) {\n    console.log(error)\n    return res.send(error)\n  }\n});\n\napp.post('/new_user', async (req, res) => {\n  const {address} = req.body;\n  const address_lc = await address.toLowerCase();\n  const newUser = await client.query(\"INSERT INTO users (address) VALUES($1) RETURNING *\", [address_lc]);\n  console.log(\"NEW USER:\", newUser.rows[0])\n  const user = newUser.rows[0];\n  // create new chainsafe bucket, store info in session and push to db\n  try {\n    const newBucket = async () => {\n      const body = {\n        name: address_lc,\n        type: 'fps'\n      }\n      const response = await fetch('https://api.chainsafe.io/api/v1/buckets', {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${process.env.REACT_APP_CHAINSAFE_KEY}`\n        },\n        body: JSON.stringify(body)\n      })\n      const json = await response.json()\n      user.bucket_id = await json.id\n      console.log(\"SESSION USER IS:\", user)\n      // send user back to client\n      res.send(user)\n    }\n    newBucket();\n  } catch (error) {\n    console.log(error)\n    res.send(error)\n  }\n})\n\n//update db with encrypted key and access control info\napp.post('/update', async (req, res) => {\nconst {key, address, accessControlConditions} = req.body\nconst address_lc = address.toLowerCase();\nawait client.query(\"UPDATE users SET encrypted_key=$1 WHERE address=$2 RETURNING *\", [key, address_lc]);\nconst updatedUser = await client.query(\"UPDATE users SET nft_info=$1 WHERE address=$2 RETURNING *\", [accessControlConditions, address_lc]);\nres.send(updatedUser)\nconsole.log(\"UPDATED USER:\", updatedUser.rows[0])\n})\n\napp.post('/get_files', async (req, res) => {\n  // get info from chainsafe\n  const body = req.body\n  const bucket_id = body.bucket_id\n  console.log( \"BUCKET ID FROM CLIENT:\", bucket_id)\n\n  const getFiles = async () => {\n    const body = {\n      path: '/'\n    }\n    const body_string = JSON.stringify(body)\n    const response = await fetch(`https://api.chainsafe.io/api/v1/bucket/${bucket_id}/ls`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${process.env.REACT_APP_CHAINSAFE_KEY}`\n      },\n      body: body_string\n    })\n    const json = await response.json()\n    console.log(\"list response is:\", json)\n    // send session user back to client\n    res.send(json)\n  }\n  getFiles();\n})\n\n  async function uploadFile(req,res) {\n    console.log('GOT TO FILE UPLOAD', req.body)\n    const file = req.file\n    console.log('request:', file)\n    const uploadFile = fs.createReadStream(file.path)\n    const {bucket_id, folder}  = req.body\n\n    const form = new FormData()\n    try {\n\n    form.append('file', uploadFile, file.name)\n\n    // TO DO input folder path here instead of root route\n    form.append('path', folder)\n    const formHeaders = form.getHeaders()\n\n    await axios.post(`https://api.chainsafe.io/api/v1/bucket/${bucket_id}/upload`, form, {\n      headers: {\n        \"Authorization\": `Bearer ${process.env.REACT_APP_CHAINSAFE_KEY}`,\n        formHeaders\n      },\n    });\n    \n    // file.path is the name that the file is stored as in the bucket\n    const json = JSON.stringify(file.path);\n\n    await res.send(json)\n    fs.unlink('uploads/' + file.filename, (err) => {\n      if (err) {\n          throw err;\n      }\n      console.log(\"Delete Upload successfully.\");\n    });\n\n    } catch (error) {\n      console.log(error)\n      fs.unlink('uploads/' + file.filename, (err) => {\n        if (err) {\n            throw err;\n        }\n        console.log(\"Delete Upload successfully.\");\n      });\n      res.status(500).send(error)\n    }\n    res.end()\n  }\n\n  app.post('/upload', upload.single('file'), uploadFile);\n\n  app.post('/delete_file', async (req, res) => {\n    const {bucket_id, path} = req.body\n    console.log('bucket Id and file path:', req.body)\n    const body = {\n      path: path\n    }\n    const body_string = JSON.stringify(body)\n    try {\n      const response = await fetch(`https://api.chainsafe.io/api/v1/bucket/${bucket_id}/rm`, {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${process.env.REACT_APP_CHAINSAFE_KEY}`\n        },\n        body: body_string\n      })\n      console.log(\"DELETE RESPONSE:\", response)\n    } catch (error) {\n      res.status(500).send(error)\n    }\n  })\n\n  //TO DO check copilot's code here\n  app.post('/new_folder', async (req, res) => {\n    console.log(\"GOT TO NEW FOLDER ROUTE\")\n    const {bucket_id, path} = req.body\n    console.log('bucket Id and folder name:', req.body)\n\n    const body = {\n      path: '/' + path\n      }\n      const response = await fetch(`https://api.chainsafe.io/api/v1/bucket/${bucket_id}/mkdir`, {\n        method: 'post',\n        headers: {\n          \"Authorization\": `Bearer ${process.env.REACT_APP_CHAINSAFE_KEY}`,\n          \"Content-Type\": 'application/json'\n          },\n          body: JSON.stringify(body)\n        })\n        const json = await response.json()\n        console.log(\"NEW FOLDER RESPONSE:\", json)\n        res.send(json)\n  })\n\n  app.post('/download', async (req, res) => {\n    console.log(\"GOT TO DOWNLOAD ROUTE\", req.body)\n    try{\n      const {bucket_id, file_path, file_name, folder} = req.body\n      const file_path_string = folder + '/' + file_path;\n      console.log(\"FILE PATH STRING:\", file_path_string)\n      const body = {\n        path: file_path_string\n      }\n      const response = await fetch(`https://api.chainsafe.io/api/v1/bucket/${bucket_id}/download`, {\n      method: 'post',\n      headers: {\n        \"Authorization\": `Bearer ${process.env.REACT_APP_CHAINSAFE_KEY}`,\n        \"Content-Type\": 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n\n    const fileStream = await fs.createWriteStream('downloads/' + file_name);\n    await new Promise((resolve, reject) => {\n    response.body.pipe(fileStream);\n    response.body.on(\"error\", reject);\n    fileStream.on(\"finish\", () => {\n        fileStream.close()\n        resolve()\n    });\n    });\n\n    await res.download('downloads/' + file_name)\n    \n    } catch (err) {\n      console.log(err)\n      res.status(500).send(err)\n    }\n  })\n\n\n  app.post('/unlink_download', async (req, res) => {\n    try {\n      const {file_name} = req.body\n      console.log(file_name)\n      fs.unlink(('downloads/' + file_name), (err) => {\n        if (err) {\n            throw err;\n        }\n          console.log(\"Delete Download successfully.\");\n      });\n    } catch (error) {\n      console.log(error)\n    }\n    res.end()\n  })\n\n// All other GET requests not handled before will return our React app\napp.get('*', (req, res) => {\n    res.sendFile(path.resolve(__dirname, '../../build', 'index.html'));\n  });\n\napp.listen(PORT, () => {\n  console.log(`Server listening on ${PORT}`);\n});",
      "prod_db.js": "const { Client } = require('pg');\nrequire('dotenv').config();\n\nconst client = new Client({\n  connectionString: process.env.DATABASE_URL,\n  ssl: {\n    rejectUnauthorized: false\n  }\n});\n\nclient.connect();\n\n\nmodule.exports = client; "
    },
    "style.js": "const styles = {\n  boxWidth: \"xl:max-w-[1280px] w-full\",\n\n  heading2: \"font-poppins font-semibold xs:text-[48px] text-[40px] text-white xs:leading-[76.8px] leading-[66.8px] w-full\",\n  paragraph: \"font-poppins font-normal text-dimWhite text-[18px] leading-[30.8px]\",\n\n  flexCenter: \"flex justify-center items-center\",\n  flexStart: \"flex justify-center items-start\",\n\n  paddingX: \"sm:px-16 px-6\",\n  paddingY: \"sm:py-16 py-6\",\n  padding: \"sm:px-16 px-6 sm:py-12 py-4\",\n\n  marginX: \"sm:mx-16 mx-6\",\n  marginY: \"sm:my-16 my-6\",\n};\n\nexport const layout = {\n  section: `flex md:flex-row flex-col ${styles.paddingY}`,\n  sectionReverse: `flex md:flex-row flex-col-reverse ${styles.paddingY}`,\n\n  sectionImgReverse: `flex-1 flex ${styles.flexCenter} md:mr-10 mr-0 md:mt-0 mt-10 relative`,\n  sectionImg: `flex-1 flex ${styles.flexCenter} md:ml-10 ml-0 md:mt-0 mt-10 relative`,\n\n  sectionInfo: `flex-1 ${styles.flexStart} flex-col`,\n};\n\nexport default styles;",
    "style_components": {
      "AppNavbar.js": "import React, {useState} from 'react'\nimport { close, logo_white, menu } from '../assets'\n\n\nfunction AppNavbar(props) {\n\tconst [ toggle, setToggle] = useState(false)\n\n\tconst navText = (window.location.pathname === '/login' ? 'Connect Wallet' : 'Disconnect')\n\tconst navButton = (window.location.pathname === '/login' ? props.handleClick : props.handleDisconnect)\n\n\treturn (\n\t\t<nav className=\"w-full flex py-3 justify-between items-center navbar\">\n\t\t\t<a href=\"/\">\n\t\t\t\t<img src={logo_white} alt=\"dstor\" className=\" ml-0 w-[85px] h-[75px]\"/>\n\t\t\t</a>\n\t\t\t\n\n\t\t\t<div className=\"hidden sm:ml-6 sm:block\">\n          <div className=\"flex space-x-4\">\n            <button className=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium hover:bg-teal-700\" onClick={navButton} aria-current=\"page\">{navText}</button>\n          </div>\n      </div>\n\n\t\t\t<div className=\"sm:hidden flex flex-1 justify-end items-center\">\n\t\t\t\t\t<img \n\t\t\t\t\tsrc={toggle? close : menu} \n\t\t\t\t\talt=\"Menu\" \n\t\t\t\t\tclassName=\"w-[28px] h-[28px] object-contain\"\n\t\t\t\t\tonClick={() => setToggle((prev) => !prev)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div\n\t\t\t\t\tclassName={`${toggle? 'flex' : 'hidden'} p-6 bg-black-gradient absolute top-20 right-0 mx-4 min-w-[140px] rounded-xl sidebar`}\n\t\t\t\t\t>\n\t\t\t\t\t<div className=\"hidden sm:ml-6 sm:block\">\n\t\t\t\t\t\t\t<div className=\"flex space-x-4\">\n\t\t\t\t\t\t\t\t<button className=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium hover:bg-teal-700\" onClick={navButton} aria-current=\"page\">{navText}</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t</nav>\n\t)\n}\n\nexport default AppNavbar",
      "Billing.js": "import { apple, bill, google } from '../assets'\nimport styles, {layout} from '../style'\n\nconst Billing = () => (\n\t<section id=\"product\" className={layout.sectionReverse}>\n\t\t<div className={layout.sectionImgReverse}>\n\t\t\t<img src={bill} alt=\"billing\" className=\"w-[100%] h-[100%] relative z-[5]\"/>\n\t\t\t<div className=\"absolute z-[3] top-0 -left-1/2 w-[50%] h-[50%] rounded-full white__gradient\"/>\n\t\t\t<div className=\"absolute z-[0] bottom-0 -left-1/2 w-[50%] h-[50%] rounded-full pink__gradient\"/>\n\t\t</div>\n\n\t\t<div className={layout.sectionInfo}>\n\t\t\t<h2 className={styles.heading2}>Access your files from<br className=\"sm:block hidden\"/> anywhere</h2>\n\t\t\t<p className={`${styles.paragraph} max-w-[470px] mt-5`}>Instantly and Securely access your files where ever you have access to your wallet.</p>\n\t\t</div>\n\t</section>\n)\n\nexport default Billing",
      "Business.js": "import React from 'react'\nimport styles, {layout} from '../style'\nimport { send, shield, star  } from \"../assets\";\nimport Button from './Button'\n\nconst features = [\n  {\n    id: \"feature-1\",\n    icon: star,\n    title: \"User-Centric Data\",\n    content:\n      \"Ceramic Network securely stores your decryption keys on a decentralized network\",\n  },\n  {\n    id: \"feature-2\",\n    icon: shield,\n    title: \"100% Secured\",\n    content:\n      \"Lit Protocol provides decentralized, client-side encryption. Your files never leave your machine unencrypted. \",\n  },\n  {\n    id: \"feature-3\",\n    icon: send,\n    title: \"IPFS\",\n    content:\n      \"Files are stored by levaraging cutting-edge storage network of IPFS and Filecoin.\",\n  },\n];\n\nconst FeatureCard = ({icon, title, content, index}) => (\n\t<div className={`flex flex-row p-6 rounded-[20px] ${index !== features.length - 1 ? \"mb-6\" : \"mb-0\"} feature-card`}>\n\t\t<div className={`w-[64px] h-[64px] rounded-full ${styles.flexCenter} bg-dimBlue`}>\n\t\t\t<img src={icon} alt=\"icon\" className=\"w-[50%] h-[50%] object-contain\" />\n\t\t</div>\n\t\t<div className=\"flex-1 flex flex-col ml-3\">\n\t\t\t<h4 className=\"font-poppins font-semibold text-white text-[18px] leading-[23px] mb-1\"> {title}</h4>\n\t\t\t<p className=\"font-poppins font-normal text-dimWhite text-[16px] leading-[24px] mb-1\"> {content}</p>\n\t\t</div>\n\t</div>\n)\n\nconst Business = () => (\n\t<section id=\"features\" className={layout.section}>\n\t\t<div className={layout.sectionInfo}>\n\t\t\t<h2 className={styles.heading2}>\n\t\t\t\tSecure, Private, Decentralized <br className=\"sm:block hidden\"/>\n\t\t\t</h2>\n\t\t\t<p className={`${styles.paragraph} max-w-[470px] mt-5`}>dStor's fully decentralized Stack means YOU own your files, and your identity.</p>\n\t\t\t<Button styles=\"mt-10\"/>\n\t\t</div>\n\t\t \n\t\t <div className={`${layout.sectionImg} flex-col`}>\n\t\t\t{features.map ((feature, index) => (\n\t\t\t\t<FeatureCard key={feature.id} {... feature} index={index} />\n\t\t\t))}\n\n\t\t </div>\n\t</section>\n\t)\n\n\nexport default Business",
      "Button.js": "import React from 'react'\n\nconst Button = ({styles}) => {\n\treturn (\n\t\t<button type=\"button\" className={`py-4 px-6 bg-blue-gradient font-poppins font-medium text-[18px] text-primary outline-none ${styles}`}>\n\t\t\tGet Started \n\t\t</button>\n\t)\n}\n\nexport default Button\n\n",
      "GetStarted.js": "import React from 'react'\nimport styles from '../style'\n\n\nconst GetStarted = () =>  (\n\t\t<div className={`${styles.flexCenter} w-[150px] rounded-full bg-blue-gradient p-[2px] cursor-pointer mt-5`}>\n\t\t\t<div className={`${styles.flexCenter} bg-primary w-[100%] h-[100%] rounded-full`}>\n\t\t\t<a href=\"https://medium.com/@keatondkirkpatrick/the-importance-of-decentralized-cloud-storage-fcbe473ed4ec\">\n\t\t\t\t<div className={`${styles.flexStart} flex-row`}>\n\t\t\t\t\t<p className=\"font-poppins font-medium text-[18px] leading-[23px] ml-2 mr-2\">\n\t\t\t\t\t\t<span className=\"text-gradient\">Learn</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className=\"font-poppins font-medium text-[18px] leading-[23px] mr-2\">\n\t\t\t\t\t\t<span className=\"text-gradient\">\n\t\t\t\t\t\t\tMore\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t)\n\n\nexport default GetStarted",
      "Hero.js": "import React from 'react'\nimport styles from '../style'\nimport {cloud_2} from '../assets'\nimport GetStarted from './GetStarted'\n\nconst Hero = () => (\n\t<section id=\"home\" className={` flex md:flex-row flex-col ${styles.paddingY}`}>\n\t\t<div className={`flex-1 ${styles.flexStart} flex-col xl:px-0 sm:px-16 px-6`}>\n\t\t\t<div className=\"flex flex-row justify-between items-center w-full\">\n\t\t\t\t<h1 className=\"flex-1 font-poppins font-semibold ss:text-[72px] text-[52px] text-white ss:leading-[100px] leading-[75px]\">\n\t\t\t\t\tCloud Storage that works for <br className=\"sm:block hidden\"/> {\" \"}\n\t\t\t\t\t<span className=\"linear-gradient\"> Everyone</span>{\" \"}\n\t\t\t\t</h1>\n\n\t\t\t</div>\n\t\t\t<p className={`${styles.paragraph} max-w-[470px] mt-5`}>Own your Data. Own your identity. Fully decentralized and encrypted cloud storage. </p>\n\t\t\t<div className=\"ss:flex hidden mr-4 md:mr-4 mr-0\">\n\t\t\t\t<GetStarted />\n\t\t\t</div>\n\t\t</div>\n\t\t<div className={`flex-1 flex ${styles.flexCenter} md:my-0 my-10 relative`}>\n\t\t\t<img src={cloud_2} alt=\"cloud\" className=\"w-[100%] h-[100%] relative z-[5] mr-10 object-contain\"/>\n\t\t\t<div className=\"absolute z-[0] w-[40%] h-[40%] top-0 pink__gradient\" />\n\t\t\t<div className=\"absolute z-[1] w-[80%] h-[80%] rounded-full bottom-40 white\" />\n\t\t\t<div className=\"absolute z-[0] w-[50%] h-[50%] right-20 bottom-20 blue__gradient\" />\n\t\t</div>\n\n\t\t<div className={`ss:hidden ${styles.flexCenter}`}>\n\t\t\t<GetStarted />\n\t\t</div>\n\t</section>\n\t)\n\n\nexport default Hero\n\n",
      "MintLoadingModal.js": "import { Fragment, useRef, useState, useEffect } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport {FallingLines} from 'react-loader-spinner';\n\nexport default function LoadingModal(props) {\n  const [open, setOpen] = useState(true)\n\n  const cancelButtonRef = useRef(null)\n\n\tuseEffect(() => {\n\t\tif (!open) {\n\t\t\tsetOpen(true)\n\t\t}\n\t\n\t}, [open])\n\t\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-10\" initialFocus={cancelButtonRef} onClose={setOpen}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 z-10 overflow-y-auto\">\n          <div className=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n              enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n              leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            >\n              <Dialog.Panel className=\"relative transform overflow-hidden rounded-lg bg-white text-center  items-center shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg\">\n                <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                  <div className=\"sm:flex sm:items-start\">\n                    <div className=\"flex flex-col mt-3 text-center items-center sm:mt-0 sm:ml-4 sm:text-left\">\n                      <Dialog.Title as=\"h3\" className=\"text-lg font-medium leading-6 text-gray-900\">\n                        Your Access NFT is Minting!\n                      </Dialog.Title>\n                      <div className=\"mt-2\">\n                        <p className=\"text-sm font-bold text-gray-500\">\n                          *Please confirm the NFT mint transaction in your wallet*\n                        </p> <br/>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-sm text-gray-500\">\n                          This may take a minute or so while we confirm the transaction on chain, but you only have to do this ONCE!\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\t\t\t\t\t\t\t\t<div className=\" flex flex-col items-center\">\n\t\t\t\t\t\t\t\t<FallingLines\n\t\t\t\t\t\t\t\t\tcolor=\"#00BFFF\"\n\t\t\t\t\t\t\t\t\tclassName=\"\"/>\n\t\t\t\t\t\t\t</div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n",
      "Navbar.js": "import React, {useState} from 'react'\nimport { close, logo_white, menu } from '../assets'\n\n\n\nfunction Navbar() {\n\tconst [ toggle, setToggle] = useState(false)\n\t\n\tconst navButton = (window.location === '/' ? 'Enter App' : 'Connect Wallet')\n\tconst navText = (window.location === '/' ? 'Enter App' : 'Connect Wallet')\n\n\tconst navLinks = [\n\t\t{\n\t\t\tid: \"Enter App\",\n\t\t\ttitle: \"Enter App\",\n\t\t},\n\t\t{\n\t\t\tid: \"Connect Wallet\",\n\t\t\ttitle: \"Connect Wallet\"\n\t\t}\n\t];\n\n\t\n\n\treturn (\n\t\t<nav className=\"w-full flex py-3 justify-between items-center navbar\">\n\t\t\t<a href=\"/\">\n\t\t\t\t<img src={logo_white} alt=\"dstor\" className=\" ml-0 w-[85px] h-[75px]\"/>\n\t\t\t</a>\n\t\t\t\n\n\t\t\t<div className=\"hidden sm:ml-6 sm:block\">\n          <div className=\"flex space-x-4\">\n            <a href='login' className=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium hover:bg-teal-700\" aria-current=\"page\">Enter App</a>\n          </div>\n        </div>\n\n\t\t\t<div className=\"sm:hidden flex flex-1 justify-end items-center\">\n\t\t\t\t\t<img \n\t\t\t\t\tsrc={toggle? close : menu} \n\t\t\t\t\talt=\"Menu\" \n\t\t\t\t\tclassName=\"w-[28px] h-[28px] object-contain\"\n\t\t\t\t\tonClick={() => setToggle((prev) => !prev)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div\n\t\t\t\t\tclassName={`${toggle? 'flex' : 'hidden'} p-6 bg-black-gradient absolute top-20 right-0 mx-4 min-w-[140px] rounded-xl sidebar`}\n\t\t\t\t\t>\n\t\t\t\t\t<ul className=\"list-none flex-col justify-end items-center flex-1\">\n\t\t\t\t\t{navLinks.map((nav, index) => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\tkey={nav.id}\n\t\t\t\t\t\tclassName={`font-poppins font-normal cursor-pointer text-[16px] text-white ${index === navLinks.length -1 ? `mr-0` : `mb-4`} mr-10`}>\n\t\t\t\t\t\t\t<a href={`#${nav.id}`}>\n\t\t\t\t\t\t\t\t{nav.title}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t</nav>\n\t)\n}\n\nexport default Navbar",
      "Spinner.js": "import React from 'react';\nimport {InfinitySpin} from 'react-loader-spinner';\n\nfunction Spinner() {\n  return (\n    <div className=\"flex flex-col justify-center items-center w-full h-full\">\n      <InfinitySpin\n        type=\"Circles\"\n        color=\"#00BFFF\"\n        height={50}\n        width={200}\n        className=\"m-5\"\n      />\n\n      <p className=\"text-lg text-center px-2\">Retrieving account...</p>\n    </div>\n  );\n}\n\nexport default Spinner;"
    }
  },
  "tailwind.config.js": "/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\"./index.html\", \"./src/**/*.{js,jsx}\"],\n  mode: \"jit\",\n  theme: {\n    extend: {\n      colors: {\n        primary: \"#00040f\",\n        secondary: \"#00f6ff\",\n        dimWhite: \"rgba(255, 255, 255, 0.7)\",\n        dimBlue: \"rgba(9, 151, 124, 0.1)\",\n      },\n      fontFamily: {\n        poppins: [\"Poppins\", \"sans-serif\"],\n      },\n    },\n    screens: {\n      xs: \"480px\",\n      ss: \"620px\",\n      sm: \"768px\",\n      md: \"1060px\",\n      lg: \"1200px\",\n      xl: \"1700px\",\n    },\n  },\n  plugins: [],\n};",
  "test": {
    "Lock.js": "const {\n  time,\n  loadFixture,\n} = require(\"@nomicfoundation/hardhat-network-helpers\");\nconst { anyValue } = require(\"@nomicfoundation/hardhat-chai-matchers/withArgs\");\nconst { expect } = require(\"chai\");\n\ndescribe(\"Lock\", function () {\n  // We define a fixture to reuse the same setup in every test.\n  // We use loadFixture to run this setup once, snapshot that state,\n  // and reset Hardhat Network to that snapshot in every test.\n  async function deployOneYearLockFixture() {\n    const ONE_YEAR_IN_SECS = 365 * 24 * 60 * 60;\n    const ONE_GWEI = 1_000_000_000;\n\n    const lockedAmount = ONE_GWEI;\n    const unlockTime = (await time.latest()) + ONE_YEAR_IN_SECS;\n\n    // Contracts are deployed using the first signer/account by default\n    const [owner, otherAccount] = await ethers.getSigners();\n\n    const Lock = await ethers.getContractFactory(\"Lock\");\n    const lock = await Lock.deploy(unlockTime, { value: lockedAmount });\n\n    return { lock, unlockTime, lockedAmount, owner, otherAccount };\n  }\n\n  describe(\"Deployment\", function () {\n    it(\"Should set the right unlockTime\", async function () {\n      const { lock, unlockTime } = await loadFixture(deployOneYearLockFixture);\n\n      expect(await lock.unlockTime()).to.equal(unlockTime);\n    });\n\n    it(\"Should set the right owner\", async function () {\n      const { lock, owner } = await loadFixture(deployOneYearLockFixture);\n\n      expect(await lock.owner()).to.equal(owner.address);\n    });\n\n    it(\"Should receive and store the funds to lock\", async function () {\n      const { lock, lockedAmount } = await loadFixture(\n        deployOneYearLockFixture\n      );\n\n      expect(await ethers.provider.getBalance(lock.address)).to.equal(\n        lockedAmount\n      );\n    });\n\n    it(\"Should fail if the unlockTime is not in the future\", async function () {\n      // We don't use the fixture here because we want a different deployment\n      const latestTime = await time.latest();\n      const Lock = await ethers.getContractFactory(\"Lock\");\n      await expect(Lock.deploy(latestTime, { value: 1 })).to.be.revertedWith(\n        \"Unlock time should be in the future\"\n      );\n    });\n  });\n\n  describe(\"Withdrawals\", function () {\n    describe(\"Validations\", function () {\n      it(\"Should revert with the right error if called too soon\", async function () {\n        const { lock } = await loadFixture(deployOneYearLockFixture);\n\n        await expect(lock.withdraw()).to.be.revertedWith(\n          \"You can't withdraw yet\"\n        );\n      });\n\n      it(\"Should revert with the right error if called from another account\", async function () {\n        const { lock, unlockTime, otherAccount } = await loadFixture(\n          deployOneYearLockFixture\n        );\n\n        // We can increase the time in Hardhat Network\n        await time.increaseTo(unlockTime);\n\n        // We use lock.connect() to send a transaction from another account\n        await expect(lock.connect(otherAccount).withdraw()).to.be.revertedWith(\n          \"You aren't the owner\"\n        );\n      });\n\n      it(\"Shouldn't fail if the unlockTime has arrived and the owner calls it\", async function () {\n        const { lock, unlockTime } = await loadFixture(\n          deployOneYearLockFixture\n        );\n\n        // Transactions are sent using the first signer by default\n        await time.increaseTo(unlockTime);\n\n        await expect(lock.withdraw()).not.to.be.reverted;\n      });\n    });\n\n    describe(\"Events\", function () {\n      it(\"Should emit an event on withdrawals\", async function () {\n        const { lock, unlockTime, lockedAmount } = await loadFixture(\n          deployOneYearLockFixture\n        );\n\n        await time.increaseTo(unlockTime);\n\n        await expect(lock.withdraw())\n          .to.emit(lock, \"Withdrawal\")\n          .withArgs(lockedAmount, anyValue); // We accept any value as `when` arg\n      });\n    });\n\n    describe(\"Transfers\", function () {\n      it(\"Should transfer the funds to the owner\", async function () {\n        const { lock, unlockTime, lockedAmount, owner } = await loadFixture(\n          deployOneYearLockFixture\n        );\n\n        await time.increaseTo(unlockTime);\n\n        await expect(lock.withdraw()).to.changeEtherBalances(\n          [owner, lock],\n          [lockedAmount, -lockedAmount]\n        );\n      });\n    });\n  });\n});\n"
  },
  "uploads": {
    ".gitkeep": ""
  }
}